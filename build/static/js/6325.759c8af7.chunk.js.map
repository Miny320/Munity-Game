{"version":3,"file":"static/js/6325.759c8af7.chunk.js","mappings":";uIAKA,MAAMA,EAA6BC,OAAO,GAAK,GAAK,GAC9CC,EAAuBD,OAAO,IAEpC,SAASE,EACPC,GAMA,OALEC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAKa,CAAEG,EAAGC,OAAOL,EAAIJ,GAAaU,EAAGD,OAAQL,GAAKF,EAAQF,IAC7D,CAAEQ,EAAsC,EAAnCC,OAAQL,GAAKF,EAAQF,GAAiBU,EAA4B,EAAzBD,OAAOL,EAAIJ,GAClE,CAEA,SAASW,EAAMC,GAAyB,IAAVC,EAAER,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC1BS,EAAK,IAAIC,YAAYH,EAAIN,QACzBU,EAAK,IAAID,YAAYH,EAAIN,QAC7B,IAAK,IAAIW,EAAI,EAAGA,EAAIL,EAAIN,OAAQW,IAAK,CACnC,MAAM,EAAET,EAAC,EAAEE,GAAMP,EAAQS,EAAIK,GAAIJ,IAChCC,EAAGG,GAAID,EAAGC,IAAM,CAACT,EAAGE,EACvB,CACA,MAAO,CAACI,EAAIE,EACd,CAEA,MAcME,EAASA,CAACV,EAAWE,EAAWS,IAAuBX,GAAKW,EAAMT,IAAO,GAAKS,EAC9EC,EAASA,CAACZ,EAAWE,EAAWS,IAAuBT,GAAKS,EAAMX,IAAO,GAAKW,EAE9EE,EAASA,CAACb,EAAWE,EAAWS,IAAuBT,GAAMS,EAAI,GAAQX,IAAO,GAAKW,EACrFG,EAASA,CAACd,EAAWE,EAAWS,IAAuBX,GAAMW,EAAI,GAAQT,IAAO,GAAKS,E,eCnB3F,MAAMI,EAAoB,GACpBC,EAAsB,GACtBC,EAAuB,GACvBC,EAAsBzB,OAAO,GAC7B0B,EAAsB1B,OAAO,GAC7B2B,EAAsB3B,OAAO,GAC7B4B,EAAsB5B,OAAO,GAC7B6B,EAAwB7B,OAAO,KAC/B8B,EAAyB9B,OAAO,KACtC,IAAK,IAAI+B,EAAQ,EAAGC,EAAIN,EAAKO,EAAI,EAAGC,EAAI,EAAGH,EAAQ,GAAIA,IAAS,EAE7DE,EAAGC,GAAK,CAACA,GAAI,EAAID,EAAI,EAAIC,GAAK,GAC/BZ,EAAQa,KAAK,GAAK,EAAID,EAAID,IAE1BV,EAAUY,MAAQJ,EAAQ,IAAMA,EAAQ,GAAM,EAAK,IAEnD,IAAIK,EAAIX,EACR,IAAK,IAAIY,EAAI,EAAGA,EAAI,EAAGA,IACrBL,GAAMA,GAAKN,GAASM,GAAKJ,GAAOE,GAAWD,EACvCG,EAAIL,IAAKS,GAAKV,IAASA,GAAuB1B,OAAOqC,IAAMX,GAEjEF,EAAWW,KAAKC,EAClB,CACA,MAAOE,EAAaC,GAA+B7B,EAAMc,GAAY,GAG/DgB,EAAQA,CAACjC,EAAWE,EAAWS,IAAeA,EAAI,GAAKE,EAAOb,EAAGE,EAAGS,GAAKD,EAAOV,EAAGE,EAAGS,GACtFuB,EAAQA,CAAClC,EAAWE,EAAWS,IAAeA,EAAI,GAAKG,EAAOd,EAAGE,EAAGS,GAAKC,EAAOZ,EAAGE,EAAGS,GA+CtF,MAAOwB,UAAeC,EAAAA,GAQ1BC,WAAAA,CACSC,EACAC,EACAC,GAEsB,IADnBC,EAAA5C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACA6C,EAAA7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiB,GAO3B,GALA8C,QANO,KAAAL,SAAAA,EACA,KAAAC,OAAAA,EACA,KAAAC,UAAAA,EACG,KAAAC,UAAAA,EACA,KAAAC,OAAAA,EAXF,KAAAE,IAAM,EACN,KAAAC,OAAS,EACT,KAAAC,UAAW,EAEX,KAAAC,WAAY,GAWpBC,EAAAA,EAAAA,IAAQR,GAGJ,GAAKS,KAAKX,UAAYW,KAAKX,UAAY,IACzC,MAAM,IAAIY,MAAM,4CAClBD,KAAKE,MAAQ,IAAIC,WAAW,KAC5BH,KAAKI,SAAUC,EAAAA,EAAAA,IAAIL,KAAKE,MAC1B,CACUI,MAAAA,GACHC,EAAAA,KAAMC,EAAAA,EAAAA,IAAWR,KAAKI,SAtEzB,SAAkB1C,GAAmC,IAAnB+B,EAAA7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiB,GACvD,MAAM6D,EAAI,IAAInD,YAAY,IAE1B,IAAK,IAAIiB,EAAQ,GAAKkB,EAAQlB,EAAQ,GAAIA,IAAS,CAEjD,IAAK,IAAIE,EAAI,EAAGA,EAAI,GAAIA,IAAKgC,EAAEhC,GAAKf,EAAEe,GAAKf,EAAEe,EAAI,IAAMf,EAAEe,EAAI,IAAMf,EAAEe,EAAI,IAAMf,EAAEe,EAAI,IACrF,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC9B,MAAMiC,GAAQjC,EAAI,GAAK,GACjBkC,GAAQlC,EAAI,GAAK,GACjBmC,EAAKH,EAAEE,GACPE,EAAKJ,EAAEE,EAAO,GACdG,EAAK9B,EAAM4B,EAAIC,EAAI,GAAKJ,EAAEC,GAC1BK,EAAK9B,EAAM2B,EAAIC,EAAI,GAAKJ,EAAEC,EAAO,GACvC,IAAK,IAAIhC,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAC3BhB,EAAEe,EAAIC,IAAMoC,EACZpD,EAAEe,EAAIC,EAAI,IAAMqC,CAEpB,CAEA,IAAIC,EAAOtD,EAAE,GACTuD,EAAOvD,EAAE,GACb,IAAK,IAAIkB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMsC,EAAQnD,EAAUa,GAClBkC,EAAK9B,EAAMgC,EAAMC,EAAMC,GACvBH,EAAK9B,EAAM+B,EAAMC,EAAMC,GACvBC,EAAKrD,EAAQc,GACnBoC,EAAOtD,EAAEyD,GACTF,EAAOvD,EAAEyD,EAAK,GACdzD,EAAEyD,GAAML,EACRpD,EAAEyD,EAAK,GAAKJ,CACd,CAEA,IAAK,IAAIrC,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAAI,CAC/B,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IAAKgC,EAAEhC,GAAKf,EAAEgB,EAAID,GAC1C,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IAAKf,EAAEgB,EAAID,KAAOgC,GAAGhC,EAAI,GAAK,IAAMgC,GAAGhC,EAAI,GAAK,GAC1E,CAEAf,EAAE,IAAMoB,EAAYP,GACpBb,EAAE,IAAMqB,EAAYR,EACtB,CACAkC,EAAEW,KAAK,EACT,CA8BIC,CAAQrB,KAAKI,QAASJ,KAAKP,QACtBc,EAAAA,KAAMC,EAAAA,EAAAA,IAAWR,KAAKI,SAC3BJ,KAAKJ,OAAS,EACdI,KAAKL,IAAM,CACb,CACA2B,MAAAA,CAAOC,IACLC,EAAAA,EAAAA,IAAQxB,MACR,MAAM,SAAEX,EAAQ,MAAEa,GAAUF,KAEtByB,GADNF,GAAOG,EAAAA,EAAAA,IAAQH,IACE1E,OACjB,IAAK,IAAI8C,EAAM,EAAGA,EAAM8B,GAAO,CAC7B,MAAME,EAAOC,KAAKC,IAAIxC,EAAWW,KAAKL,IAAK8B,EAAM9B,GACjD,IAAK,IAAInC,EAAI,EAAGA,EAAImE,EAAMnE,IAAK0C,EAAMF,KAAKL,QAAU4B,EAAK5B,KACrDK,KAAKL,MAAQN,GAAUW,KAAKM,QAClC,CACA,OAAON,IACT,CACU8B,MAAAA,GACR,GAAI9B,KAAKH,SAAU,OACnBG,KAAKH,UAAW,EAChB,MAAM,MAAEK,EAAK,OAAEZ,EAAM,IAAEK,EAAG,SAAEN,GAAaW,KAEzCE,EAAMP,IAAQL,EACU,KAAV,IAATA,IAAwBK,IAAQN,EAAW,GAAGW,KAAKM,SACxDJ,EAAMb,EAAW,IAAM,IACvBW,KAAKM,QACP,CACUyB,SAAAA,CAAUC,IAClBR,EAAAA,EAAAA,IAAQxB,MAAM,IACdiC,EAAAA,EAAAA,IAAOD,GACPhC,KAAK8B,SACL,MAAMI,EAAYlC,KAAKE,OACjB,SAAEb,GAAaW,KACrB,IAAK,IAAIL,EAAM,EAAG8B,EAAMO,EAAInF,OAAQ8C,EAAM8B,GAAO,CAC3CzB,KAAKJ,QAAUP,GAAUW,KAAKM,SAClC,MAAMqB,EAAOC,KAAKC,IAAIxC,EAAWW,KAAKJ,OAAQ6B,EAAM9B,GACpDqC,EAAIG,IAAID,EAAUE,SAASpC,KAAKJ,OAAQI,KAAKJ,OAAS+B,GAAOhC,GAC7DK,KAAKJ,QAAU+B,EACfhC,GAAOgC,CACT,CACA,OAAOK,CACT,CACAK,OAAAA,CAAQL,GAEN,IAAKhC,KAAKR,UAAW,MAAM,IAAIS,MAAM,yCACrC,OAAOD,KAAK+B,UAAUC,EACxB,CACAM,GAAAA,CAAIC,GAEF,OADAxC,EAAAA,EAAAA,IAAQwC,GACDvC,KAAKqC,QAAQ,IAAIlC,WAAWoC,GACrC,CACAC,UAAAA,CAAWR,GAET,IADAS,EAAAA,EAAAA,IAAQT,EAAKhC,MACTA,KAAKH,SAAU,MAAM,IAAII,MAAM,+BAGnC,OAFAD,KAAK+B,UAAUC,GACfhC,KAAK0C,UACEV,CACT,CACAW,MAAAA,GACE,OAAO3C,KAAKwC,WAAW,IAAIrC,WAAWH,KAAKT,WAC7C,CACAmD,OAAAA,GACE1C,KAAKF,WAAY,EACjBE,KAAKE,MAAMkB,KAAK,EAClB,CACAwB,UAAAA,CAAWC,GACT,MAAM,SAAExD,EAAQ,OAAEC,EAAM,UAAEC,EAAS,OAAEE,EAAM,UAAED,GAAcQ,KAY3D,OAXA6C,IAAAA,EAAO,IAAI3D,EAAOG,EAAUC,EAAQC,EAAWC,EAAWC,IAC1DoD,EAAGzC,QAAQ+B,IAAInC,KAAKI,SACpByC,EAAGlD,IAAMK,KAAKL,IACdkD,EAAGjD,OAASI,KAAKJ,OACjBiD,EAAGhD,SAAWG,KAAKH,SACnBgD,EAAGpD,OAASA,EAEZoD,EAAGvD,OAASA,EACZuD,EAAGtD,UAAYA,EACfsD,EAAGrD,UAAYA,EACfqD,EAAG/C,UAAYE,KAAKF,UACb+C,CACT,EAGF,MAAMC,EAAMA,CAACxD,EAAgBD,EAAkBE,KAC7CwD,EAAAA,EAAAA,IAAgB,IAAM,IAAI7D,EAAOG,EAAUC,EAAQC,IAcxCyD,EAAoCF,EAAI,EAAM,IAAK,G,8HClOzD,MAAMG,EAAU,SCOvB,IAAIC,EAA2B,CAC7BC,WAAYC,IAAA,IAAC,YACXC,EAAW,SACXC,EAAW,GAAE,SACbC,GACoBH,EAAA,OACpBE,EAAQ,GAAAE,OACU,OAAXH,QAAW,IAAXA,EAAAA,EAAe,mBAAiBG,OAAGF,GAAQE,OAC5CD,EAAW,IAAHC,OAAOD,GAAa,SAE9BzG,GACNmG,QAAS,QAAFO,OAAUP,IAkBb,MAAOQ,UAAkBxD,MAS7Bb,WAAAA,CAAYsE,GAAoD,IAAAC,EAAAC,EAAAC,EAAA,IAA9BC,EAAAlH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA4B,CAAC,EAC7D,MAAMmH,EACAD,EAAKE,iBAAiBP,EAAkBK,EAAKE,MAAMD,QACzC,QAAdE,EAAIH,EAAKE,aAAK,IAAAC,GAAVA,EAAYC,QAAgBJ,EAAKE,MAAME,QACpCJ,EAAKC,QAHE,IAACE,EAKjB,MAAMX,EACAQ,EAAKE,iBAAiBP,GACjBK,EAAKE,MAAMV,UACbQ,EAAKR,SAERa,EAAgC,QAAzBR,GAAGC,EAAAV,GAAYC,kBAAU,IAAAQ,OAAA,EAAtBA,EAAAS,KAAAR,GAAAS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAA8BP,GAAI,IAAER,cAWpD5D,MATgB,CACdgE,GAAgB,qBAChB,MACII,EAAKQ,aAAe,IAAIR,EAAKQ,aAAc,IAAM,MACjDH,EAAU,CAAC,SAADX,OAAUW,IAAa,MACjCJ,EAAU,CAAC,YAADP,OAAaO,IAAa,MACpCb,EAAYD,QAAU,CAAC,YAADO,OAAaN,EAAYD,UAAa,IAChEsB,KAAK,MAEQT,EAAKE,MAAQ,CAAEA,MAAOF,EAAKE,YAAUlH,GA9BtD0H,OAAAC,eAAA,gB,yDACAD,OAAAC,eAAA,iB,yDACAD,OAAAC,eAAA,qB,yDACAD,OAAAC,eAAA,qB,yDACAD,OAAAC,eAAA,gB,yDAESD,OAAAC,eAAA,a,gDAAO,cA0BdzE,KAAK+D,QAAUA,EACf/D,KAAKsD,SAAWA,EAChBtD,KAAKsE,aAAeR,EAAKQ,aACzBtE,KAAK0E,KAAgB,QAAZb,EAAGC,EAAKY,YAAI,IAAAb,EAAAA,EAAI7D,KAAK0E,KAC9B1E,KAAK0D,aAAeA,EACpB1D,KAAKiD,QAAUA,CACjB,CAIA0B,IAAAA,CAAKC,GACH,OAAOD,EAAK3E,KAAM4E,EACpB,EAGF,SAASD,EACPE,EACAD,GAEA,OAAM,OAAFA,QAAE,IAAFA,GAAAA,EAAKC,GAAaA,EAEpBA,GACe,kBAARA,GACP,UAAWA,QACG/H,IAAd+H,EAAIb,MAEGW,EAAKE,EAAIb,MAAOY,GAClBA,EAAK,KAAOC,CACrB,CC5FM,SAAUC,EACdC,GACwD,IAAxD,OAAEC,GAAS,GAAIpI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAuC,CAAC,EAEvD,QAAKmI,IACgB,kBAAVA,IACJC,EAAS,mBAAmBC,KAAKF,GAASA,EAAMG,WAAW,OACpE,CCWM,MAAOC,UAAoC1B,EAC/CrE,WAAAA,CAAAgG,GAQC,IARW,KACVC,EAAI,WACJC,EAAU,KACVC,GAKDH,EACC1F,MAAM,GAAD8D,OACA+B,EAAKC,OAAO,GAAGC,eAAajC,OAAG+B,EAC/BG,MAAM,GACNC,cAAa,WAAAnC,OAAU6B,EAAI,4BAAA7B,OAA2B8B,EAAU,MACnE,CAAEZ,KAAM,+BAEZ,ECtBI,SAAUkB,EACdC,GACmC,IAAnC,IAAEC,EAAG,KAAET,EAAO,IAAEzI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiB,CAAC,EAElC,MAA0B,kBAAfiJ,EAOP,SAAiBE,GAA8C,IAAnC,IAAED,EAAG,KAAET,EAAO,IAAEzI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiB,CAAC,EAClE,GAAa,OAATyI,EAAe,OAAOU,EAC1B,MAAMC,EAAMD,EAAKE,QAAQ,KAAM,IAC/B,GAAID,EAAInJ,OAAgB,EAAPwI,EACf,MAAM,IAAIF,EAA4B,CACpCE,KAAMzD,KAAKsE,KAAKF,EAAInJ,OAAS,GAC7ByI,WAAYD,EACZE,KAAM,QAGV,MAAO,KAAP/B,OAAYwC,EAAY,UAARF,EAAkB,SAAW,YACpC,EAAPT,EACA,KAEJ,CApBWc,CAAON,EAAY,CAAEC,MAAKT,SAwB/B,SACJ9C,GACmC,IAAnC,IAAEuD,EAAG,KAAET,EAAO,IAAEzI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiB,CAAC,EAElC,GAAa,OAATyI,EAAe,OAAO9C,EAC1B,GAAIA,EAAM1F,OAASwI,EACjB,MAAM,IAAIF,EAA4B,CACpCE,KAAM9C,EAAM1F,OACZyI,WAAYD,EACZE,KAAM,UAEV,MAAMa,EAAc,IAAIjG,WAAWkF,GACnC,IAAK,IAAI7H,EAAI,EAAGA,EAAI6H,EAAM7H,IAAK,CAC7B,MAAM6I,EAAiB,UAARP,EACfM,EAAYC,EAAS7I,EAAI6H,EAAO7H,EAAI,GAClC+E,EAAM8D,EAAS7I,EAAI+E,EAAM1F,OAASW,EAAI,EAC1C,CACA,OAAO4I,CACT,CAzCSE,CAAST,EAAY,CAAEC,MAAKT,QACrC,CCjBM,MAAOkB,UAA+B9C,EAC1CrE,WAAAA,CAAAgE,GAYC,IAZW,IACVoD,EAAG,IACH3E,EAAG,OACH4E,EAAM,KACNpB,EAAI,MACJN,GAOD3B,EACC1D,MAAM,WAAD8D,OACQuB,EAAK,qBAAAvB,OACd6B,EAAO,GAAH7B,OAAa,EAAP6B,EAAQ,SAAA7B,OAAQiD,EAAS,SAAW,WAAU,KAAM,GAChE,kBAAAjD,OAAiBgD,EAAM,IAAHhD,OAAO3B,EAAG,QAAA2B,OAAOgD,EAAG,eAAAhD,OAAgB3B,EAAG,MAC3D,CAAE6C,KAAM,0BAEZ,EA4CI,MAAOgC,UAA0BjD,EACrCrE,WAAAA,CAAAgG,GAA0E,IAA9D,UAAEuB,EAAS,QAAEC,GAAiDxB,EACxE1F,MAAM,sBAAD8D,OACmBoD,EAAO,wBAAApD,OAAuBmD,EAAS,WAC7D,CAAEjC,KAAM,qBAEZ,EChEI,SAAUW,EAAKN,GACnB,OAAID,EAAMC,EAAO,CAAEC,QAAQ,IAAiBpD,KAAKsE,MAAMnB,EAAMlI,OAAS,GAAK,GACpEkI,EAAMlI,MACf,CCEM,SAAUgK,EACdhB,EAA2BzC,GACD,IAA1B,KAAEiC,GAAwBjC,EAE1B,GAAI0D,EAAMjB,GAAcR,EACtB,MAAM,IAAIqB,EAAkB,CAC1BC,UAAWG,EAAMjB,GACjBe,QAASvB,GAEf,CAsGM,SAAU0B,EAAYf,GAAoC,IAA1BgB,EAAApK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAwB,CAAC,EAC7D,MAAM,OAAE6J,GAAWO,EAEfA,EAAK3B,MAAMwB,EAAWb,EAAK,CAAEX,KAAM2B,EAAK3B,OAE5C,MAAMN,EAAQvI,OAAOwJ,GACrB,IAAKS,EAAQ,OAAO1B,EAEpB,MAAMM,GAAQW,EAAInJ,OAAS,GAAK,EAEhC,OAAIkI,IADS,IAAsB,GAAfvI,OAAO6I,GAAa,IAAO,GACtBN,EAElBA,EAAQvI,OAAO,KAADgH,OAAM,IAAIyD,SAAgB,EAAP5B,EAAU,OAAU,EAC9D,CAkEM,SAAU6B,EAAYlB,GAC1B,OAAOhJ,OAAO+J,EAAYf,EADUpJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAwB,CAAC,GAE/D,CCxMA,MAAMuK,EAAsBC,MAAMC,KAAK,CAAExK,OAAQ,KAAO,CAACyK,EAAI9J,IAC3DA,EAAE+J,SAAS,IAAIN,SAAS,EAAG,MAwCvB,SAAUO,EACdzC,GAC0B,IAA1BiC,EAAApK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAwB,CAAC,EAEzB,MAAqB,kBAAVmI,GAAuC,kBAAVA,EAC/B0C,EAAY1C,EAAOiC,GACP,kBAAVjC,EA4LP,SAAsB2C,GAA0C,IAA1BV,EAAApK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAwB,CAAC,EACnE,MAAMmI,EAAQ4C,EAAQC,OAAOF,GAC7B,OAAOG,EAAW9C,EAAOiC,EAC3B,CA9LWc,CAAY/C,EAAOiC,GAEP,mBAAVjC,EAmCP,SAAoBA,GAAwC,IAAxBiC,EAAApK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAsB,CAAC,EAC/D,MAAMoJ,EAAG,KAAAxC,OAAaxG,OAAO+H,IAC7B,GAAyB,kBAAdiC,EAAK3B,KAEd,OADAwB,EAAWb,EAAK,CAAEX,KAAM2B,EAAK3B,OACtBO,EAAII,EAAK,CAAEX,KAAM2B,EAAK3B,OAE/B,OAAOW,CACT,CA1CyC+B,CAAUhD,EAAOiC,GACjDa,EAAW9C,EAAOiC,EAC3B,CAoEM,SAAUa,EAAW9C,GAA2C,IAAzBiC,EAAApK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAuB,CAAC,EAC/DoL,EAAS,GACb,IAAK,IAAIxK,EAAI,EAAGA,EAAIuH,EAAMlI,OAAQW,IAChCwK,GAAUb,EAAMpC,EAAMvH,IAExB,MAAMwI,EAAM,KAAHxC,OAAQwE,GAEjB,MAAyB,kBAAdhB,EAAK3B,MACdwB,EAAWb,EAAK,CAAEX,KAAM2B,EAAK3B,OACtBO,EAAII,EAAK,CAAEF,IAAK,QAAST,KAAM2B,EAAK3B,QAEtCW,CACT,CAuCM,SAAUyB,EACdC,GAC0B,IAA1BV,EAAApK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAwB,CAAC,EAEzB,MAAM,OAAE6J,EAAM,KAAEpB,GAAS2B,EAEnBjC,EAAQvI,OAAOkL,GAErB,IAAIO,EACA5C,EACU4C,EAARxB,GAAoB,IAAsB,GAAfjK,OAAO6I,GAAa,IAAO,GAC1C,KAAsB,GAAf7I,OAAO6I,IAAc,GACjB,kBAAXqC,IAChBO,EAAWzL,OAAOQ,OAAOkL,mBAG3B,MAAMC,EAA+B,kBAAbF,GAAyBxB,GAAUwB,EAAW,GAAK,EAE3E,GAAKA,GAAYlD,EAAQkD,GAAalD,EAAQoD,EAAU,CACtD,MAAM7I,EAA2B,kBAAXoI,EAAsB,IAAM,GAClD,MAAM,IAAInB,EAAuB,CAC/BC,IAAKyB,EAAW,GAAHzE,OAAMyE,GAAQzE,OAAGlE,QAAWxC,EACzC+E,IAAK,GAAF2B,OAAK2E,GAAQ3E,OAAGlE,GACnBmH,SACApB,OACAN,MAAO,GAAFvB,OAAKkE,GAAMlE,OAAGlE,IAEvB,CAEA,MAAM0G,EAAM,KAAHxC,QACPiD,GAAU1B,EAAQ,GAAK,IAAMvI,OAAc,EAAP6I,IAAa7I,OAAOuI,GAASA,GACjEwC,SAAS,KACX,OAAIlC,EAAaO,EAAII,EAAK,CAAEX,SACrBW,CACT,CASA,MAAM2B,EAAwB,IAAIS,YCnNlC,MAAMT,EAAwB,IAAIS,YAwC5B,SAAU1G,EACdqD,GAC4B,IAA5BiC,EAAApK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA0B,CAAC,EAE3B,MAAqB,kBAAVmI,GAAuC,kBAAVA,EA+IpC,SACJA,EACAiC,GAEA,MAAMhB,EAAMyB,EAAY1C,EAAOiC,GAC/B,OAAOqB,EAAWrC,EACpB,CApJWsC,CAAcvD,EAAOiC,GACT,mBAAVjC,EAkCP,SAAsBA,GAA0C,IAA1BiC,EAAApK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAwB,CAAC,EACnE,MAAM2F,EAAQ,IAAIpC,WAAW,GAE7B,GADAoC,EAAM,GAAKvF,OAAO+H,GACO,kBAAdiC,EAAK3B,KAEd,OADAwB,EAAWtE,EAAO,CAAE8C,KAAM2B,EAAK3B,OACxBO,EAAIrD,EAAO,CAAE8C,KAAM2B,EAAK3B,OAEjC,OAAO9C,CACT,CA1CyCgG,CAAYxD,EAAOiC,GACtDlC,EAAMC,GAAesD,EAAWtD,EAAOiC,GACpCwB,EAAczD,EAAOiC,EAC9B,CA0CA,MAAMyB,EAAc,CAClBC,KAAM,GACNC,KAAM,GACNC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,KAGL,SAASC,EAAiBC,GACxB,OAAIA,GAAQR,EAAYC,MAAQO,GAAQR,EAAYE,KAC3CM,EAAOR,EAAYC,KACxBO,GAAQR,EAAYG,GAAKK,GAAQR,EAAYI,EACxCI,GAAQR,EAAYG,EAAI,IAC7BK,GAAQR,EAAYK,GAAKG,GAAQR,EAAYM,EACxCE,GAAQR,EAAYK,EAAI,SADjC,CAGF,CA4BM,SAAUT,EAAWtC,GAAoC,IAAzBiB,EAAApK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAuB,CAAC,EACxDoJ,EAAMD,EACNiB,EAAK3B,OACPwB,EAAWb,EAAK,CAAEX,KAAM2B,EAAK3B,OAC7BW,EAAMJ,EAAII,EAAK,CAAEF,IAAK,QAAST,KAAM2B,EAAK3B,QAG5C,IAAI6D,EAAYlD,EAAIN,MAAM,GACtBwD,EAAUrM,OAAS,IAAGqM,EAAY,IAAH1F,OAAO0F,IAE1C,MAAMrM,EAASqM,EAAUrM,OAAS,EAC5B0F,EAAQ,IAAIpC,WAAWtD,GAC7B,IAAK,IAAIsM,EAAQ,EAAGtK,EAAI,EAAGsK,EAAQtM,EAAQsM,IAAS,CAClD,MAAMC,EAAaJ,EAAiBE,EAAUG,WAAWxK,MACnDyK,EAAcN,EAAiBE,EAAUG,WAAWxK,MAC1D,QAAmB/B,IAAfsM,QAA4CtM,IAAhBwM,EAC9B,MAAM,IAAI7F,EAAU,2BAADD,OACU0F,EAAUrK,EAAI,IAAE2E,OACzC0F,EAAUrK,EAAI,GAChB,UAAA2E,OAAS0F,EAAS,QAGtB3G,EAAM4G,GAAsB,GAAbC,EAAkBE,CACnC,CACA,OAAO/G,CACT,CA+DM,SAAUiG,EACdzD,GAC4B,IAA5BiC,EAAApK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA0B,CAAC,EAE3B,MAAM2F,EAAQoF,EAAQC,OAAO7C,GAC7B,MAAyB,kBAAdiC,EAAK3B,MACdwB,EAAWtE,EAAO,CAAE8C,KAAM2B,EAAK3B,OACxBO,EAAIrD,EAAO,CAAEuD,IAAK,QAAST,KAAM2B,EAAK3B,QAExC9C,CACT,C,cCnOM,SAAUgH,EACdxE,EACAyE,GAEA,MAAM3G,EAAK2G,GAAO,MACZjH,GAAQS,EAAAA,EAAAA,IACZ8B,EAAMC,EAAO,CAAEC,QAAQ,IAAWtD,EAAQqD,GAASA,GAErD,MAAW,UAAPlC,EAAuBN,EACpBiF,EAAMjF,EACf,CCzBM,MAAOkH,UAAgCC,IAG3CtK,WAAAA,CAAYiG,GACV3F,QAHF8E,OAAAC,eAAA,gB,yDAIEzE,KAAK4G,QAAUvB,CACjB,CAESsE,GAAAA,CAAIC,GACX,MAAM7E,EAAQrF,MAAMiK,IAAIC,GAOxB,OALIlK,MAAMmK,IAAID,SAAkB9M,IAAViI,IACpB/E,KAAK8J,OAAOF,GACZlK,MAAMyC,IAAIyH,EAAK7E,IAGVA,CACT,CAES5C,GAAAA,CAAIyH,EAAa7E,GAExB,GADArF,MAAMyC,IAAIyH,EAAK7E,GACX/E,KAAK4G,SAAW5G,KAAKqF,KAAOrF,KAAK4G,QAAS,CAC5C,MAAMmD,EAAW/J,KAAKgK,OAAOC,OAAOlF,MAChCgF,GAAU/J,KAAK8J,OAAOC,EAC5B,CACA,OAAO/J,IACT,ECnBF,MAAMkK,EAAqC,IAAIT,EAAgB,MAOzD,SAAUU,EACdC,EAWAC,GAEA,GAAIH,EAAqBL,IAAI,GAADrG,OAAI4G,EAAQ,KAAA5G,OAAI6G,IAC1C,OAAOH,EAAqBP,IAAI,GAADnG,OAAI4G,EAAQ,KAAA5G,OAAI6G,IAEjD,MAAMC,EAAaD,EAAO,GAAA7G,OACnB6G,GAAO7G,OAAG4G,EAASzE,eACtByE,EAASG,UAAU,GAAG5E,cACpB6E,EAAOjB,EAAUf,EAAc8B,GAAa,SAE5CG,GACJJ,EAAUC,EAAWC,UAAU,GAAA/G,OAAG6G,EAAO,MAAKxN,QAAUyN,GACxDpN,MAAM,IACR,IAAK,IAAIM,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACvBgN,EAAKhN,GAAK,IAAM,GAAK,GAAKiN,EAAQjN,KACpCiN,EAAQjN,GAAKiN,EAAQjN,GAAGiI,gBAEN,GAAf+E,EAAKhN,GAAK,KAAc,GAAKiN,EAAQjN,EAAI,KAC5CiN,EAAQjN,EAAI,GAAKiN,EAAQjN,EAAI,GAAGiI,eAIpC,MAAMiF,EAAS,KAAHlH,OAAQiH,EAAQlG,KAAK,KAEjC,OADA2F,EAAqB/H,IAAI,GAADqB,OAAI4G,EAAQ,KAAA5G,OAAI6G,GAAWK,GAC5CA,CACT,CCAA,SAASC,EAAcC,GACrB,GAAmB,IAAfA,GAAmC,IAAfA,EAAkB,OAAOA,EACjD,GAAmB,KAAfA,EAAmB,OAAO,EAC9B,GAAmB,KAAfA,EAAmB,OAAO,EAC9B,MAAM,IAAI3K,MAAM,2BAClB,CC5CO4K,eAAeC,EAAc1H,GAGT,IAHU,KACnCoH,EAAI,UACJO,GACyB3H,EACzB,OCII,SAA6B4H,GACjC,MAAMP,EAAUlB,EAAU,KAAD/F,OAAMwH,EAAUT,UAAU,KAAMA,UAAU,IACnE,OAAOJ,EAAgB,KAAD3G,OAAMiH,GAC9B,CDPSQ,ODCFJ,eAA+BzH,GAGT,IAHU,KACrCoH,EAAI,UACJO,GAC2B3H,EAC3B,MAAM8H,EAAUpG,EAAM0F,GAAQA,EAAOhD,EAAMgD,IAErC,UAAEW,SAAoB,gCACtBC,EAAa,MAEjB,GAAyB,kBAAdL,GAA0B,MAAOA,GAAa,MAAOA,EAAW,CACzE,MAAM,EAAEM,EAAC,EAAE3N,EAAC,EAAE4N,EAAC,QAAEC,GAAYR,EAEvBS,EAAcb,EADD3N,OAAc,OAAPuO,QAAO,IAAPA,EAAAA,EAAWD,IAErC,OAAO,IAAIH,EAAUM,UACnB1E,EAAYsE,GACZtE,EAAYrJ,IACZgO,eAAeF,EACnB,CAGA,MAAMG,EAAe7G,EAAMiG,GAAaA,EAAYvD,EAAMuD,GAEpDS,EAAcb,EADDzD,EAAY,KAAD1D,OAAMmI,EAAajG,MAAM,QAEvD,OAAOyF,EAAUM,UAAUG,YACzBD,EAAapB,UAAU,EAAG,MAC1BmB,eAAeF,EAClB,EAnBkB,GAqBbR,EAAYI,EACfS,iBAAiBX,EAAQX,UAAU,IACnC/C,OAAM,GACT,MAAO,KAAPhE,OAAYwH,EACd,CCjCkCa,CAAiB,CAAErB,KAAMA,EAAMO,cACjE,C,058REhBO,SAASe,IAAsB,IAAVzG,EAAIzI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACjC,OAAyB,MAArBmP,WAAWC,QAAmD,MAAjCD,WAAWC,OAAOF,YAC1CC,WAAWC,OAAOF,YAAYzG,GAEhC,IAAIlF,WAAWkF,EACxB,CCVO,SAAS7B,EAAOyI,EAAQpP,GACxBA,IACHA,EAASoP,EAAOC,OAAO,CAACC,EAAKC,IAASD,EAAMC,EAAKvP,OAAQ,IAE3D,MAAMwP,EAASP,EAAYjP,GAC3B,IAAIyP,EAAS,EACb,IAAK,MAAMC,KAAON,EAChBI,EAAOlK,IAAIoK,EAAKD,GAChBA,GAAUC,EAAI1P,OAEhB,OAAOwP,CACT,C,0DCVA,SAASG,EAAY9H,EAAM+H,EAAQ7E,EAAQ8E,GACzC,MAAO,CACLhI,OACA+H,SACA9E,QAAS,CACPjD,OACA+H,SACA7E,UAEF+E,QAAS,CAAED,UAEf,CACA,MAAM1E,EAASwE,EAAY,OAAQ,IAAKI,GAE/B,IADS,IAAIC,YAAY,QACXH,OAAOE,GAC3BE,IACe,IAAI1E,aACLR,OAAOkF,EAAIvC,UAAU,KAEhCwC,EAAQP,EAAY,QAAS,IAAKI,IACtC,IAAI5E,EAAS,IACb,IAAK,IAAIxK,EAAI,EAAGA,EAAIoP,EAAI/P,OAAQW,IAC9BwK,GAAUgF,OAAOC,aAAaL,EAAIpP,IAEpC,OAAOwK,GACN8E,IAED,MAAMF,EAAMd,GADZgB,EAAMA,EAAIvC,UAAU,IACQ1N,QAC5B,IAAK,IAAIW,EAAI,EAAGA,EAAIsP,EAAIjQ,OAAQW,IAC9BoP,EAAIpP,GAAKsP,EAAIzD,WAAW7L,GAE1B,OAAOoP,IAWT,GATWvI,EAAAA,EAAAA,GAAA,CACT6I,KAAMlF,EACN,QAASA,EACThC,IAAKmH,EAAAA,GAAMC,OACXC,OAAQN,EACRA,MAAOA,EACPO,OAAQP,GACLI,EAAAA,ICzCE,SAASI,EAAWvF,GAA2B,IAAnBwF,EAAQ5Q,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAC5C,MAAM6Q,EAAON,EAAMK,GACnB,IAAKC,EACH,MAAM,IAAIxN,MAAM,yBAADuD,OAA2BgK,EAAQ,MAEpD,MAAkB,SAAbA,GAAoC,UAAbA,GAA8C,MAArBzB,WAAWC,QAA4C,MAA1BD,WAAWC,OAAO3E,KAG7FoG,EAAKd,QAAQD,OAAO,GAADlJ,OAAKiK,EAAKhB,QAAMjJ,OAAKwE,IAFtC+D,WAAWC,OAAO3E,KAAKW,EAAQ,OAG1C,CCTO,SAAST,EAASmG,GAA0B,IAAnBF,EAAQ5Q,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAM6Q,EAAON,EAAMK,GACnB,IAAKC,EACH,MAAM,IAAIxN,MAAM,yBAADuD,OAA2BgK,EAAQ,MAEpD,MAAkB,SAAbA,GAAoC,UAAbA,GAA8C,MAArBzB,WAAWC,QAA4C,MAA1BD,WAAWC,OAAO3E,KAG7FoG,EAAK9F,QAAQC,OAAO8F,GAAOnD,UAAU,GAFnCwB,WAAWC,OAAO3E,KAAKqG,EAAMC,OAAQD,EAAME,WAAYF,EAAMG,YAAYtG,SAAS,OAG7F,C,kBCJA,SAASxH,EAAQpD,GACf,IAAKK,OAAO8Q,cAAcnR,IAAMA,EAAI,EAAG,MAAM,IAAIsD,MAAM,kCAAoCtD,EAC7F,CAQA,SAASsF,EAAO8L,GACd,MANejF,EAMFiF,aALO5N,YAAe6N,YAAYC,OAAOnF,IAA6B,eAAvBA,EAAE1J,YAAYsF,MAKzD,MAAM,IAAIzE,MAAM,uBAAuB,IAN1D,IAAiB6I,EAMyCoF,EAAAtR,UAAAC,OADZsR,EAAiB,IAAA/G,MAAA8G,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAjBD,EAAiBC,EAAA,GAAAxR,UAAAwR,GAE7D,GAAID,EAAQtR,OAAS,IAAMsR,EAAQE,SAASN,EAAElR,QAC5C,MAAM,IAAIoD,MAAM,iCAAmCkO,EAAU,gBAAkBJ,EAAElR,OACrF,CAWA,SAASyR,EAAMvR,GACb,GAAiB,oBAANA,GAAwC,oBAAbA,EAAEwR,OACtC,MAAM,IAAItO,MAAM,mDAClBF,EAAQhD,EAAEwC,WACVQ,EAAQhD,EAAEsC,SACZ,CAGA,SAASmC,EAAQgN,GAAmC,IAApBC,IAAa7R,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC3C,GAAI4R,EAAS1O,UAAW,MAAM,IAAIG,MAAM,oCACxC,GAAIwO,GAAiBD,EAAS3O,SAAU,MAAM,IAAII,MAAM,wCAC1D,CAGA,SAASwC,EAAQT,EAAUwM,GACzBvM,EAAOD,GACP,MAAMH,EAAM2M,EAASjP,UACrB,GAAIyC,EAAInF,OAASgF,EACf,MAAM,IAAI5B,MAAM,yDAA2D4B,EAE/E,C,uECnDA,SAAS6M,EAAiBC,GACtB,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAEzBH,EAAQI,WAAaJ,EAAQK,UAAY,IAAMH,EAAQF,EAAQjE,QAE/DiE,EAAQM,QAAUN,EAAQO,QAAU,IAAMJ,EAAOH,EAAQQ,QAEjE,CACA,SAASC,EAAYC,EAAQC,GACzB,MAAMX,EAAUY,UAAUC,KAAKH,GAC/BV,EAAQc,gBAAkB,IAAMd,EAAQjE,OAAOgF,kBAAkBJ,GACjE,MAAMK,EAAMjB,EAAiBC,GAC7B,MAAO,CAACiB,EAAQC,IAAaF,EAAIG,KAAMC,GAAOF,EAASE,EAAGC,YAAYV,EAAWM,GAAQK,YAAYX,IACzG,CACA,IAAIY,EACJ,SAASC,IAIL,OAHKD,IACDA,EAAsBd,EAAY,eAAgB,WAE/Cc,CACX,CAOA,SAASvG,EAAIC,GACT,OADyBhN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGuT,KACT,WAAaC,GAAU1B,EAAiB0B,EAAMzG,IAAIC,IACzE,CAQA,SAASzH,EAAIyH,EAAK7E,GACd,OADgCnI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGuT,KAChB,YAAcC,IAC7BA,EAAMC,IAAItL,EAAO6E,GACV8E,EAAiB0B,EAAMJ,cAEtC,CAqDA,SAASM,EAAI1G,GACT,OADyBhN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGuT,KACT,YAAcC,IAC7BA,EAAMtG,OAAOF,GACN8E,EAAiB0B,EAAMJ,cAEtC,CAkBA,SAASO,IACL,OADsB3T,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGuT,KACN,YAAcC,IAC7BA,EAAMG,QACC7B,EAAiB0B,EAAMJ,cAEtC,CACA,SAASQ,EAAWJ,EAAOP,GAOvB,OANAO,EAAMK,aAAazB,UAAY,WACtBhP,KAAK0K,SAEVmF,EAAS7P,KAAK0K,QACd1K,KAAK0K,OAAOgG,WAChB,EACOhC,EAAiB0B,EAAMJ,YAClC,CAMA,SAAShG,IACL,OADqBpN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGuT,KACL,WAAaC,IAE5B,GAAIA,EAAMO,WACN,OAAOjC,EAAiB0B,EAAMO,cAElC,MAAMC,EAAQ,GACd,OAAOJ,EAAWJ,EAAQS,GAAWD,EAAMjS,KAAKkS,EAAOjH,MAAMkG,KAAK,IAAMc,IAEhF,C,g1BCnJA,MAAME,EAAiB,oIACjBC,EAAuB,iKACvBC,EAAY,2DAClB,SAASC,EAAmBrH,EAAK7E,GAC/B,KAAY,cAAR6E,GAA+B,gBAARA,GAAyB7E,GAA0B,kBAAVA,GAAsB,cAAeA,GAIzG,OAAOA,GAET,SAAwB6E,GACtBsH,QAAQC,KAAK,qBAAD3N,OAAsBoG,EAAG,yCACvC,CAPIwH,CAAexH,EAInB,CAIA,SAASyH,EAAMtM,GAAqB,IAAduM,EAAO1U,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/B,GAAqB,kBAAVmI,EACT,OAAOA,EAET,GAAiB,MAAbA,EAAM,IAA0C,MAA5BA,EAAMA,EAAMlI,OAAS,KAAuC,IAAzBkI,EAAMwM,QAAQ,MACvE,OAAOxM,EAAMW,MAAM,GAAI,GAEzB,MAAM8L,EAASzM,EAAM0M,OACrB,GAAID,EAAO3U,QAAU,EACnB,OAAQ2U,EAAO7L,eACb,IAAK,OACH,OAAO,EAET,IAAK,QACH,OAAO,EAET,IAAK,YACH,OAEF,IAAK,OACH,OAAO,KAET,IAAK,MACH,OAAO3I,OAAO0U,IAEhB,IAAK,WACH,OAAO1U,OAAO2U,kBAEhB,IAAK,YACH,OAAO3U,OAAO4U,kBAIpB,IAAKZ,EAAU/L,KAAKF,GAAQ,CAC1B,GAAIuM,EAAQtM,OACV,MAAM,IAAI6M,YAAY,wBAExB,OAAO9M,CACT,CACA,IACE,GAAI+L,EAAe7L,KAAKF,IAAUgM,EAAqB9L,KAAKF,GAAQ,CAClE,GAAIuM,EAAQtM,OACV,MAAM,IAAI/E,MAAM,wCAElB,OAAO6R,KAAKC,MAAMhN,EAAOkM,EAC3B,CACA,OAAOa,KAAKC,MAAMhN,EACpB,CAAE,MAAOoK,GACP,GAAImC,EAAQtM,OACV,MAAMmK,EAER,OAAOpK,CACT,CACF,CC5DA,SAASiN,EAAUC,GACjB,IAAI,QAAA/D,EAAAtR,UAAAC,OAD2BqV,EAAU,IAAA9K,MAAA8G,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAV8D,EAAU9D,EAAA,GAAAxR,UAAAwR,GAEvC,OARmBrJ,EAQEkN,KAAaC,KAPA,oBAAfnN,EAAM+K,KAGpB/K,EAFE6J,QAAQC,QAAQ9J,EAOzB,CAAE,MAAOoK,GACP,OAAOP,QAAQE,OAAOK,EACxB,CAXF,IAAuBpK,CAYvB,CASA,SAASoN,EAAUpN,GACjB,GATF,SAAqBA,GACnB,MAAMQ,SAAcR,EACpB,OAAiB,OAAVA,GAA2B,WAATQ,GAA8B,aAATA,CAChD,CAMM6M,CAAYrN,GACd,OAAOiI,OAAOjI,GAEhB,GARF,SAAsBA,GACpB,MAAMsN,EAAQ7N,OAAO8N,eAAevN,GACpC,OAAQsN,GAASA,EAAME,cAAc/N,OACvC,CAKMgO,CAAazN,IAAUqC,MAAMqL,QAAQ1N,GACvC,OAAO+M,KAAKK,UAAUpN,GAExB,GAA4B,oBAAjBA,EAAM2N,OACf,OAAOP,EAAUpN,EAAM2N,UAEzB,MAAM,IAAIzS,MAAM,sCAClB,CACA,MAAM0S,EAAgB,UACtB,SAASC,EAAa7N,GACpB,MAAqB,kBAAVA,EACFA,EAEF4N,EAoBT,SAAsBE,GACpB,GAAI9G,WAAWC,OACb,OAAOA,OAAO3E,KAAKwL,GAAOtL,SAAS,UAErC,OAAOwE,WAAW+G,KAAK9F,OAAO+F,iBAAiBF,GACjD,CAzByBG,CAAajO,EACtC,CACA,SAASkO,EAAelO,GACtB,MAAqB,kBAAVA,EACFA,EAEJA,EAAMG,WAAWyN,GAKxB,SAAsBE,GACpB,GAAI9G,WAAWC,OACb,OAAOA,OAAO3E,KAAKwL,EAAO,UAE5B,OAAO1S,WAAWkH,KAChB0E,WAAWmH,KAAKL,GACfM,GAAMA,EAAEC,YAAY,GAEzB,CAVSC,CAAatO,EAAMW,MAAMiN,IAFvB5N,CAGX,CAuEA,SAASuO,EAAa1J,GAAK,IAAA2J,EACzB,OAAK3J,IAGmB,QAAjB2J,EAAA3J,EAAI1M,MAAM,KAAK,UAAE,IAAAqW,OAAA,EAAjBA,EAAmBtN,QAAQ,SAAU,KAAKA,QAAQ,MAAO,KAAKA,QAAQ,SAAU,MAF9E,EAGX,CACA,SAASuN,IAAkB,QAAAC,EAAA7W,UAAAC,OAANmN,EAAI,IAAA5C,MAAAqM,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ1J,EAAI0J,GAAA9W,UAAA8W,GACvB,OAAOJ,EAAatJ,EAAKzF,KAAK,KAChC,CACA,SAASoP,EAAiBlG,GAExB,OADAA,EAAO6F,EAAa7F,IACNA,EAAO,IAAM,EAC7B,CC3HA,MACMmG,EAAsB,KAC1B,MAAMrS,EAAuB,IAAImI,IACjC,MAAO,CACLhF,KAJgB,SAKhBmP,YAAaA,IAAMtS,EACnBuS,QAAQlK,GACCrI,EAAKsI,IAAID,GAElBmK,OAAAA,CAAQnK,GAAK,IAAAoK,EACX,OAAoB,QAApBA,EAAOzS,EAAKoI,IAAIC,UAAI,IAAAoK,EAAAA,EAAI,IAC1B,EACAC,UAAAA,CAAWrK,GAAK,IAAAsK,EACd,OAAoB,QAApBA,EAAO3S,EAAKoI,IAAIC,UAAI,IAAAsK,EAAAA,EAAI,IAC1B,EACAC,OAAAA,CAAQvK,EAAK7E,GACXxD,EAAKY,IAAIyH,EAAK7E,EAChB,EACAqP,UAAAA,CAAWxK,EAAK7E,GACdxD,EAAKY,IAAIyH,EAAK7E,EAChB,EACAsP,UAAAA,CAAWzK,GACTrI,EAAKuI,OAAOF,EACd,EACA0K,QAAOA,IACE,IAAI/S,EAAKyI,QAElBuG,KAAAA,GACEhP,EAAKgP,OACP,EACAgE,OAAAA,GACEhT,EAAKgP,OACP,IAIJ,SAASiE,IACP,MAAMC,EAAU,CACdC,OAAQ,CAAE,IAFgB9X,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAER+X,QAAUf,KAChCgB,YAAa,CAAC,IACdC,UAAU,EACVC,eAAgB,GAChBC,QAAS,CAAC,GAENC,EAAYpL,IAChB,IAAK,MAAM6D,KAAQgH,EAAQG,YACzB,GAAIhL,EAAI1E,WAAWuI,GACjB,MAAO,CACLA,OACAwH,YAAarL,EAAIlE,MAAM+H,EAAK5Q,QAC5B8X,OAAQF,EAAQC,OAAOjH,IAI7B,MAAO,CACLA,KAAM,GACNwH,YAAarL,EACb+K,OAAQF,EAAQC,OAAO,MAGrBQ,EAAYA,CAACzH,EAAM0H,IAChBV,EAAQG,YAAYQ,OACxBC,GAAeA,EAAWnQ,WAAWuI,IAAS0H,GAAiB1H,EAAKvI,WAAWmQ,IAChFC,IAAKD,IAAU,CACfE,aAAc9H,EAAK5Q,OAASwY,EAAWxY,OAAS4Q,EAAK/H,MAAM2P,EAAWxY,aAAU,EAChFwY,aACAV,OAAQF,EAAQC,OAAOW,MAGrBG,EAAWA,CAACC,EAAO7L,KACvB,GAAK6K,EAAQI,SAAb,CAGAjL,EAAM0J,EAAa1J,GACnB,IAAK,MAAM8L,KAAYjB,EAAQK,eAC7BY,EAASD,EAAO7L,EAHlB,GAmBI+L,EAAY9K,UAChB,GAAK4J,EAAQI,SAAb,CAGA,IAAK,MAAMQ,KAAcZ,EAAQM,cACzBN,EAAQM,QAAQM,KAExBZ,EAAQM,QAAU,CAAC,EACnBN,EAAQI,UAAW,CALnB,GAOIe,EAAWA,CAAChF,EAAOiF,EAAeC,KACtC,MAAMC,EAA0B,IAAIrM,IAC9BsM,EAAYC,IAChB,IAAIC,EAAQH,EAAQpM,IAAIsM,EAAMxI,MAS9B,OARKyI,IACHA,EAAQ,CACNvB,OAAQsB,EAAMtB,OACdlH,KAAMwI,EAAMxI,KACZmD,MAAO,IAETmF,EAAQ5T,IAAI8T,EAAMxI,KAAMyI,IAEnBA,GAET,IAAK,MAAMC,KAAQvF,EAAO,CACxB,MAAMwF,EAA+B,kBAATD,EACtBvM,EAAM0J,EAAa8C,EAAeD,EAAOA,EAAKvM,KAC9C7E,EAAQqR,OAAe,EAASD,EAAKpR,MACrCsR,EAAWD,IAAiBD,EAAK7E,QAAUuE,GAAaxR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQwR,GAAkBM,EAAK7E,SACvF2E,EAAQjB,EAASpL,GACvBoM,EAASC,GAAOrF,MAAMjS,KAAK,CACzBiL,MACA7E,QACAkQ,YAAagB,EAAMhB,YACnB3D,QAAS+E,GAEb,CACA,OAAOzH,QAAQ0H,IAAI,IAAIP,EAAQQ,UAAUjB,IAAKY,GAAUJ,EAAGI,KAASpG,KACjEzE,GAAMA,EAAEmL,SAGPC,EAAU,CAEd3C,OAAAA,CAAQlK,GAAgB,IAAX5C,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnBgN,EAAM0J,EAAa1J,GACnB,MAAM,YAAEqL,EAAW,OAAEN,GAAWK,EAASpL,GACzC,OAAOoI,EAAU2C,EAAOb,QAASmB,EAAajO,EAChD,EACA+M,OAAAA,CAAQnK,GAAgB,IAAX5C,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnBgN,EAAM0J,EAAa1J,GACnB,MAAM,YAAEqL,EAAW,OAAEN,GAAWK,EAASpL,GACzC,OAAOoI,EAAU2C,EAAOZ,QAASkB,EAAajO,GAAM8I,KACjD/K,GAAUsM,EAAMtM,GAErB,EACA2R,QAAAA,CAAS9F,GAA2B,IAApBiF,EAAajZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/B,OAAOgZ,EAAShF,EAAOiF,EAAgBK,GACjCA,EAAMvB,OAAO+B,SACR1E,EACLkE,EAAMvB,OAAO+B,SACbR,EAAMtF,MAAM0E,IAAKa,IAAI,CACnBvM,IAAKuM,EAAKlB,YACV3D,QAAS6E,EAAK7E,WAEhBuE,GACA/F,KACCzE,GAAMA,EAAEiK,IAAKa,IAAI,CAChBvM,IAAK4J,EAAS0C,EAAMzI,KAAM0I,EAAKvM,KAC/B7E,MAAOsM,EAAM8E,EAAKpR,WAIjB6J,QAAQ0H,IACbJ,EAAMtF,MAAM0E,IAAKa,GACRnE,EACLkE,EAAMvB,OAAOZ,QACboC,EAAKlB,YACLkB,EAAK7E,SACLxB,KAAM/K,IAAK,CACX6E,IAAKuM,EAAKvM,IACV7E,MAAOsM,EAAMtM,QAKvB,EACAkP,UAAAA,CAAWrK,GAAgB,IAAX5C,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtBgN,EAAM0J,EAAa1J,GACnB,MAAM,YAAEqL,EAAW,OAAEN,GAAWK,EAASpL,GACzC,OAAI+K,EAAOV,WACFjC,EAAU2C,EAAOV,WAAYgB,EAAajO,GAE5CgL,EAAU2C,EAAOZ,QAASkB,EAAajO,GAAM8I,KACjD/K,GAAUkO,EAAelO,GAE9B,EACA,aAAMoP,CAAQvK,EAAK7E,GAAkB,IAAXiC,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChC,QAAc,IAAVmI,EACF,OAAO0R,EAAQpC,WAAWzK,GAE5BA,EAAM0J,EAAa1J,GACnB,MAAM,YAAEqL,EAAW,OAAEN,GAAWK,EAASpL,GACpC+K,EAAOR,gBAGNnC,EAAU2C,EAAOR,QAASc,EAAa9C,EAAUpN,GAAQiC,GAC1D2N,EAAOgC,OACVnB,EAAS,SAAU5L,GAEvB,EACA,cAAMgN,CAAShG,EAAOiF,SACdD,EAAShF,EAAOiF,EAAehL,UACnC,GAAIqL,EAAMvB,OAAOiC,SACf,OAAO5E,EACLkE,EAAMvB,OAAOiC,SACbV,EAAMtF,MAAM0E,IAAKa,IAAI,CACnBvM,IAAKuM,EAAKlB,YACVlQ,MAAOoN,EAAUgE,EAAKpR,OACtBuM,QAAS6E,EAAK7E,WAEhBuE,GAGCK,EAAMvB,OAAOR,eAGZvF,QAAQ0H,IACZJ,EAAMtF,MAAM0E,IAAKa,GACRnE,EACLkE,EAAMvB,OAAOR,QACbgC,EAAKlB,YACL9C,EAAUgE,EAAKpR,OACfoR,EAAK7E,YAKf,EACA,gBAAM8C,CAAWxK,EAAK7E,GAAkB,IAAXiC,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnC,QAAc,IAAVmI,EACF,OAAO0R,EAAQpC,WAAWzK,EAAK5C,GAEjC4C,EAAM0J,EAAa1J,GACnB,MAAM,YAAEqL,EAAW,OAAEN,GAAWK,EAASpL,GACzC,GAAI+K,EAAOP,iBACHpC,EAAU2C,EAAOP,WAAYa,EAAalQ,EAAOiC,OAClD,KAAI2N,EAAOR,QAGhB,aAFMnC,EAAU2C,EAAOR,QAASc,EAAarC,EAAa7N,GAAQiC,EAGpE,CACK2N,EAAOgC,OACVnB,EAAS,SAAU5L,EAEvB,EACA,gBAAMyK,CAAWzK,GAAgB,IAAX5C,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACR,mBAAToK,IACTA,EAAO,CAAE6P,WAAY7P,IAEvB4C,EAAM0J,EAAa1J,GACnB,MAAM,YAAEqL,EAAW,OAAEN,GAAWK,EAASpL,GACpC+K,EAAON,mBAGNrC,EAAU2C,EAAON,WAAYY,EAAajO,IAC5CA,EAAK6P,YAAc7P,EAAK8P,mBACpB9E,EAAU2C,EAAON,WAAYY,EAAc,IAAKjO,GAEnD2N,EAAOgC,OACVnB,EAAS,SAAU5L,GAEvB,EAEA,aAAMmN,CAAQnN,GAAgB,IAAX5C,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACL,mBAAToK,IACTA,EAAO,CAAEgQ,WAAYhQ,IAEvB4C,EAAM0J,EAAa1J,GACnB,MAAM,YAAEqL,EAAW,OAAEN,GAAWK,EAASpL,GACnCqN,EAAuBzS,OAAO+J,OAAO,MAI3C,GAHIoG,EAAOoC,SACTvS,OAAO0S,OAAOD,QAAYjF,EAAU2C,EAAOoC,QAAS9B,EAAajO,KAE9DA,EAAKgQ,WAAY,CACpB,MAAMjS,QAAciN,EAClB2C,EAAOZ,QACPkB,EAAc,IACdjO,GACA8I,KAAMpI,GAAW2J,EAAM3J,IACrB3C,GAA0B,kBAAVA,IACS,kBAAhBA,EAAMoS,QACfpS,EAAMoS,MAAQ,IAAIC,KAAKrS,EAAMoS,QAEJ,kBAAhBpS,EAAMsS,QACftS,EAAMsS,MAAQ,IAAID,KAAKrS,EAAMsS,QAE/B7S,OAAO0S,OAAOD,EAAMlS,GAExB,CACA,OAAOkS,CACT,EACAK,OAAAA,CAAQ1N,EAAK7E,GAAkB,IAAXiC,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1B,OAAOoD,KAAKmU,QAAQvK,EAAM,IAAK7E,EAAOiC,EACxC,EACA6P,UAAAA,CAAWjN,GAAgB,IAAX5C,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtB,OAAOoD,KAAKqU,WAAWzK,EAAM,IAAK5C,EACpC,EAEA,aAAMsN,CAAQ7G,GAAiB,IAAXzG,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1B6Q,EAAOkG,EAAiBlG,GACxB,MAAMiH,EAASQ,EAAUzH,GAAM,GAC/B,IAAI8J,EAAe,GACnB,MAAMC,EAAU,GAChB,IAAIC,GAA2B,EAC/B,IAAK,MAAMxB,KAASvB,EAAQ,KAAAgD,EACH,QAAnBA,EAACzB,EAAMtB,OAAOgD,aAAK,IAAAD,GAAlBA,EAAoBE,WACvBH,GAA2B,GAE7B,MAAMI,QAAgB7F,EACpBiE,EAAMtB,OAAOL,QACb2B,EAAMV,aACNvO,GAEF,IAAK,MAAM4C,KAAOiO,EAAS,CACzB,MAAMC,EAAU7B,EAAMZ,WAAa/B,EAAa1J,GAC3C2N,EAAaQ,KAAMC,GAAMF,EAAQ5S,WAAW8S,KAC/CR,EAAQ7Y,KAAKmZ,EAEjB,CACAP,EAAe,CACbtB,EAAMZ,cACHkC,EAAanC,OAAQ4C,IAAOA,EAAE9S,WAAW+Q,EAAMZ,aAEtD,CACA,MAAM4C,OAAwC,IAAlBjR,EAAK4Q,WAAwBH,EACzD,OAAOD,EAAQpC,OACZxL,KAAUqO,GD3MnB,SAA0BrO,EAAKsO,GAC7B,QAAc,IAAVA,EACF,OAAO,EAET,IAAIC,EAAc,EACdhP,EAAQS,EAAI2H,QAAQ,KACxB,KAAOpI,GAAS,GACdgP,IACAhP,EAAQS,EAAI2H,QAAQ,IAAKpI,EAAQ,GAEnC,OAAOgP,GAAeD,CACxB,CCgM0CE,CAAiBxO,EAAK5C,EAAK4Q,YD/LrE,SAAyBhO,EAAK6D,GAC5B,OAAIA,EACK7D,EAAI1E,WAAWuI,IAAiC,MAAxB7D,EAAIA,EAAI/M,OAAS,GAEnB,MAAxB+M,EAAIA,EAAI/M,OAAS,EAC1B,CC0LmFwb,CAAgBzO,EAAK6D,GAEpG,EAEA,WAAM8C,CAAM9C,GAAiB,IAAXzG,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxB6Q,EAAOkG,EAAiBlG,SAClBmB,QAAQ0H,IACZpB,EAAUzH,GAAM,GAAO6H,IAAIzK,UACzB,GAAIyN,EAAE3D,OAAOpE,MACX,OAAOyB,EAAUsG,EAAE3D,OAAOpE,MAAO+H,EAAE/C,aAAcvO,GAEnD,GAAIsR,EAAE3D,OAAON,WAAY,CACvB,MAAMrK,QAAasO,EAAE3D,OAAOL,QAAQgE,EAAE/C,cAAgB,GAAIvO,GAC1D,OAAO4H,QAAQ0H,IACbtM,EAAKsL,IAAK1L,GAAQ0O,EAAE3D,OAAON,WAAWzK,EAAK5C,IAE/C,IAGN,EACA,aAAMuN,SACE3F,QAAQ0H,IACZ9R,OAAO+R,OAAO9B,EAAQC,QAAQY,IAAKX,GAAWJ,EAAQI,IAE1D,EACA9J,MAAW8L,MAAC9G,SAlRKhF,WACjB,IAAI4J,EAAQI,SAAZ,CAGAJ,EAAQI,UAAW,EACnB,IAAK,MAAMQ,KAAcZ,EAAQC,OAC/BD,EAAQM,QAAQM,SAAoBsB,EAClClC,EAAQC,OAAOW,GACfG,EACAH,EANJ,GAgRQkD,GACN9D,EAAQK,eAAenW,KAAKkR,GACrBhF,UACL4J,EAAQK,eAAiBL,EAAQK,eAAeM,OAC7CM,GAAaA,IAAa7F,GAES,IAAlC4E,EAAQK,eAAejY,cACnB8Y,MAIZ,aAAMZ,GACJN,EAAQK,eAAiB,SACnBa,GACR,EAEAM,KAAAA,CAAMxI,EAAMkH,GAEV,IADAlH,EAAOkG,EAAiBlG,KACZgH,EAAQC,OAAOjH,GACzB,MAAM,IAAIxN,MAAM,sBAADuD,OAAuBiK,IAYxC,OAVIA,IACFgH,EAAQG,YAAYjW,KAAK8O,GACzBgH,EAAQG,YAAY4D,KAAK,CAAC1P,EAAGiF,IAAMA,EAAElR,OAASiM,EAAEjM,SAElD4X,EAAQC,OAAOjH,GAAQkH,EACnBF,EAAQI,UACVjG,QAAQC,QAAQ8H,EAAMhC,EAAQa,EAAU/H,IAAOqC,KAAM2I,IACnDhE,EAAQM,QAAQtH,GAAQgL,IACvBC,MAAMxH,QAAQ/B,OAEZsH,CACT,EACA,aAAMkC,CAAQlL,GAAuB,IAAjBmL,IAAQhc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAE1B,IADA6Q,EAAOkG,EAAiBlG,KACVgH,EAAQC,OAAOjH,GAA7B,CAGiD,IAAAoL,EAAAC,EAAjD,GAAIrE,EAAQI,UAAYpH,KAAQgH,EAAQM,QACjB,QAArB8D,GAAAC,EAAArE,EAAQM,SAAQtH,UAAK,IAAAoL,GAArBA,EAAAzU,KAAA0U,UACOrE,EAAQM,QAAQtH,GAErBmL,SACIrE,EAAQE,EAAQC,OAAOjH,IAE/BgH,EAAQG,YAAcH,EAAQG,YAAYQ,OAAQxL,GAAQA,IAAQ6D,UAC3DgH,EAAQC,OAAOjH,EATtB,CAUF,EACAuH,QAAAA,GAAmB,IAAVpL,EAAGhN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACbgN,EAAM0J,EAAa1J,GAAO,IAC1B,MAAM0O,EAAItD,EAASpL,GACnB,MAAO,CACL+K,OAAQ2D,EAAE3D,OACVlH,KAAM6K,EAAE7K,KAEZ,EACAyH,SAAAA,GAAgC,IAAtBzH,EAAI7Q,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIoK,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3B6Q,EAAO6F,EAAa7F,GAEpB,OADeyH,EAAUzH,EAAMzG,EAAK+R,SACtBzD,IAAKgD,IAAC,CAClB3D,OAAQ2D,EAAE3D,OACVlH,KAAM6K,EAAEjD,aAEZ,EAEArL,KAAM,SAACyD,GAAI,IAAEzG,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK6Z,EAAQnC,QAAQ7G,EAAMzG,EAAK,EACtD2C,IAAK,SAACC,GAAG,IAAE5C,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK6Z,EAAQ1C,QAAQnK,EAAK5C,EAAK,EACnD7E,IAAK,SAACyH,EAAK7E,GAAK,IAAEiC,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK6Z,EAAQtC,QAAQvK,EAAK7E,EAAOiC,EAAK,EACjE6C,IAAK,SAACD,GAAG,IAAE5C,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK6Z,EAAQ3C,QAAQlK,EAAK5C,EAAK,EACnDsJ,IAAK,SAAC1G,GAAG,IAAE5C,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK6Z,EAAQpC,WAAWzK,EAAK5C,EAAK,EACtDgS,OAAQ,SAACpP,GAAG,IAAE5C,EAAIpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK6Z,EAAQpC,WAAWzK,EAAK5C,EAAK,GAE3D,OAAOyP,CACT,CAkBA,SAASE,EAAMhC,EAAQa,EAAU/H,GAC/B,OAAOkH,EAAOgC,MAAQhC,EAAOgC,MAAM,CAAClB,EAAO7L,IAAQ4L,EAASC,EAAOhI,EAAO7D,IAAQ,MAEpF,CACAiB,eAAe0J,EAAQI,GACS,oBAAnBA,EAAOJ,eACVvC,EAAU2C,EAAOJ,QAE3B,C,40GCjVA,QAtHA,SAAe0E,GACb,GAAIA,EAASpc,QAAU,IAAO,MAAM,IAAIqc,UAAU,qBAClD,MAAMC,EAAW,IAAIhZ,WAAW,KAChC,IAAK,IAAItB,EAAI,EAAGA,EAAIsa,EAAStc,OAAQgC,IACnCsa,EAASta,GAAK,IAEhB,IAAK,IAAIrB,EAAI,EAAGA,EAAIyb,EAASpc,OAAQW,IAAK,CACxC,MAAMiB,EAAIwa,EAASzT,OAAOhI,GACpB4b,EAAK3a,EAAE4K,WAAW,GACxB,GAAqB,MAAjB8P,EAASC,GAAe,MAAM,IAAIF,UAAUza,EAAI,iBACpD0a,EAASC,GAAM5b,CACjB,CACA,MAAM6b,EAAOJ,EAASpc,OAChByc,EAASL,EAASzT,OAAO,GACzB+T,EAAS3X,KAAK4X,IAAIH,GAAQzX,KAAK4X,IAAI,KACnCC,EAAU7X,KAAK4X,IAAI,KAAO5X,KAAK4X,IAAIH,GA8CzC,SAASK,EAAcC,GACrB,GAAsB,kBAAXA,EAAuB,MAAM,IAAIT,UAAU,mBACtD,GAAsB,IAAlBS,EAAO9c,OAAgB,OAAO,IAAIsD,WACtC,IAAIyZ,EAAM,EAENC,EAAS,EACThd,EAAS,EACb,KAAO8c,EAAOC,KAASN,GACrBO,IACAD,IAGF,MAAMvU,GAAUsU,EAAO9c,OAAS+c,GAAOL,EAAU,IAAO,EAClDO,EAAO,IAAI3Z,WAAWkF,GAE5B,KAAOuU,EAAMD,EAAO9c,QAAQ,CAE1B,MAAMkd,EAAWJ,EAAOtQ,WAAWuQ,GAEnC,GAAIG,EAAW,IAAO,OAEtB,IAAIC,EAAQb,EAASY,GAErB,GAAc,MAAVC,EAAiB,OACrB,IAAIxc,EAAI,EACR,IAAK,IAAIyc,EAAM5U,EAAO,GAAc,IAAV2U,GAAexc,EAAIX,KAAqB,IAATod,EAAaA,IAAOzc,IAC3Ewc,GAAUX,EAAOS,EAAKG,KAAU,EAChCH,EAAKG,GAAQD,EAAQ,MAAS,EAC9BA,EAASA,EAAQ,MAAS,EAE5B,GAAc,IAAVA,EAAe,MAAM,IAAI/Z,MAAM,kBACnCpD,EAASW,EACToc,GACF,CAEA,IAAIM,EAAM7U,EAAOxI,EACjB,KAAOqd,IAAQ7U,GAAsB,IAAdyU,EAAKI,IAC1BA,IAEF,MAAMC,EAAM,IAAIha,WAAW0Z,GAAUxU,EAAO6U,IAC5C,IAAIrb,EAAIgb,EACR,KAAOK,IAAQ7U,GACb8U,EAAItb,KAAOib,EAAKI,KAElB,OAAOC,CACT,CAMA,MAAO,CACLvS,OAjGF,SAAiB+R,GAOf,GALIA,aAAkBxZ,aAAyB6N,YAAYC,OAAO0L,GAChEA,EAAS,IAAIxZ,WAAWwZ,EAAOhM,OAAQgM,EAAO/L,WAAY+L,EAAO9L,YACxDzG,MAAMqL,QAAQkH,KACvBA,EAASxZ,WAAWkH,KAAKsS,OAErBA,aAAkBxZ,YAAe,MAAM,IAAI+Y,UAAU,uBAC3D,GAAsB,IAAlBS,EAAO9c,OAAgB,MAAO,GAElC,IAAIgd,EAAS,EACThd,EAAS,EACTud,EAAS,EACb,MAAMC,EAAOV,EAAO9c,OACpB,KAAOud,IAAWC,GAA2B,IAAnBV,EAAOS,IAC/BA,IACAP,IAGF,MAAMxU,GAASgV,EAAOD,GAAUX,EAAU,IAAO,EAC3Ca,EAAM,IAAIna,WAAWkF,GAE3B,KAAO+U,IAAWC,GAAM,CACtB,IAAIL,EAAQL,EAAOS,GAEf5c,EAAI,EACR,IAAK,IAAI+c,EAAMlV,EAAO,GAAc,IAAV2U,GAAexc,EAAIX,KAAqB,IAAT0d,EAAaA,IAAO/c,IAC3Ewc,GAAU,IAAMM,EAAIC,KAAU,EAC9BD,EAAIC,GAAQP,EAAQX,IAAU,EAC9BW,EAASA,EAAQX,IAAU,EAE7B,GAAc,IAAVW,EAAe,MAAM,IAAI/Z,MAAM,kBACnCpD,EAASW,EACT4c,GACF,CAEA,IAAII,EAAMnV,EAAOxI,EACjB,KAAO2d,IAAQnV,GAAqB,IAAbiV,EAAIE,IACzBA,IAGF,IAAI1N,EAAMwM,EAAOmB,OAAOZ,GACxB,KAAOW,EAAMnV,IAAQmV,EAAO1N,GAAOmM,EAASzT,OAAO8U,EAAIE,IACvD,OAAO1N,CACT,EAsDE4M,eACAhN,OARF,SAAiB1E,GACf,MAAM2F,EAAS+L,EAAa1R,GAC5B,GAAI2F,EAAU,OAAOA,EACrB,MAAM,IAAI1N,MAAM,WAAaoZ,EAAO,aACtC,EAMF,ECxHA,QAAeqB,EADA,6D,4jGCCfC,EAAOC,QAAU,WACf,MAAM,IAAI3a,MACR,wFAGJ,C,mCCLM,MAAgB4a,G,oCCFtB,IAAIC,EAAgD,SAAUjY,EAAIwE,EAAM0T,GACpE,GAAIA,GAA6B,IAArBne,UAAUC,OAAc,IAAK,IAA4Bme,EAAxBxd,EAAI,EAAGP,EAAIoK,EAAKxK,OAAYW,EAAIP,EAAGO,KACxEwd,GAAQxd,KAAK6J,IACR2T,IAAIA,EAAK5T,MAAM6T,UAAUvV,MAAMtB,KAAKiD,EAAM,EAAG7J,IAClDwd,EAAGxd,GAAK6J,EAAK7J,IAGrB,OAAOqF,EAAGW,OAAOwX,GAAM5T,MAAM6T,UAAUvV,MAAMtB,KAAKiD,GACtD,EACI6T,EACA,SAAqBxW,EAAMzB,EAASkY,GAChCnb,KAAK0E,KAAOA,EACZ1E,KAAKiD,QAAUA,EACfjD,KAAKmb,GAAKA,EACVnb,KAAKuF,KAAO,SAChB,EAIA6V,EACA,SAAkBnY,GACdjD,KAAKiD,QAAUA,EACfjD,KAAKuF,KAAO,OACZvF,KAAK0E,KAAO,OACZ1E,KAAKmb,GAAKE,QAAQC,QACtB,EAIAC,EACA,SAA6B7W,EAAMzB,EAASkY,EAAIK,GAC5Cxb,KAAK0E,KAAOA,EACZ1E,KAAKiD,QAAUA,EACfjD,KAAKmb,GAAKA,EACVnb,KAAKwb,IAAMA,EACXxb,KAAKuF,KAAO,YAChB,EAIAkW,EACA,WACIzb,KAAKuF,KAAO,MACZvF,KAAKwb,KAAM,EACXxb,KAAK0E,KAAO,MACZ1E,KAAKiD,QAAU,KACfjD,KAAKmb,GAAK,IACd,EAIAO,EACA,WACI1b,KAAKuF,KAAO,eACZvF,KAAK0E,KAAO,eACZ1E,KAAKiD,QAAU,KACfjD,KAAKmb,GAAK,IACd,EAMAQ,EAAqB,qFACrBC,EAAyB,EACzBC,EAAiB,CACjB,CAAC,MAAO,0BACR,CAAC,OAAQ,qBACT,CAAC,WAAY,uBACb,CAAC,gBAAiB,0BAClB,CAAC,YAAa,yBACd,CAAC,UAAW,8BACZ,CAAC,OAAQ,yBACT,CAAC,OAAQ,4BACT,CAAC,SAAU,6BACX,CAAC,gBAAiB,qBAClB,CACI,mBACA,0DAEJ,CAAC,SAAU,oDACX,CAAC,YAAa,iCACd,CAAC,QAAS,6BACV,CAAC,UAAW,+BACZ,CAAC,QAAS,qBACV,CAAC,aAAc,mCACf,CAAC,QAAS,6BACV,CAAC,QAAS,2BACV,CAAC,MAAO,oDACR,CAAC,MAAO,iGACR,CAAC,WAAY,wCACb,CAAC,KAAM,6CACP,CAAC,KAAM,uCACP,CAAC,KAAM,gBACP,CAAC,OAAQ,qCACT,CAAC,UAAW,uBACZ,CAAC,MAAO,0CACR,CAAC,SAAU,gCACX,CAAC,WAAY,uBACb,CAAC,YAAa,yBACd,CAAC,cAAe,mCAChB,CAAC,cAAe,qCAChB,CAAC,OAAQ,sBACT,CAAC,YAzCoB,iIA2CrBC,EAAuB,CACvB,CAAC,MAAO,kBACR,CAAC,aAAc,WACf,CAAC,gBAAiB,mBAClB,CAAC,iBAAkB,YACnB,CAAC,YAAa,UACd,CAAC,eAAgB,SACjB,CAAC,aAAc,qCACf,CAAC,aAAc,wBACf,CAAC,eAAgB,mCACjB,CAAC,aAAc,iCACf,CAAC,sBAAuB,oBACxB,CAAC,gBAAiB,oBAClB,CAAC,YAAa,oBACd,CAAC,YAAa,oBACd,CAAC,cAAe,oBAChB,CAAC,aAAc,qBACf,CAAC,aAAc,cACf,CAAC,aAAc,uDACf,CAAC,WAAY,WACb,CAAC,SAAU,SACX,CAAC,YAAa,QACd,CAAC,QAAS,iBACV,CAAC,SAAU,6BACX,CAAC,MAAO,OACR,CAAC,OAAQ,QACT,CAAC,OAAQ,UAEN,SAASC,EAAOC,GACnB,OAAMA,EACKC,EAAeD,GAEF,qBAAbE,UACc,qBAAdC,WACe,gBAAtBA,UAAUC,QACH,IAAIV,EAEU,qBAAdS,UACAF,EAAeE,UAAUH,WA6DJ,qBAAZX,SAA2BA,QAAQpY,QACvC,IAAImY,EAASC,QAAQpY,QAAQyC,MAAM,IAAM,IA3D7D,CACA,SAAS2W,EAAeC,GAKpB,MAAe,KAAPA,GACJT,EAAe3P,OAAO,SAAUqQ,EAASC,GACrC,IAAIC,EAAUD,EAAG,GAAIE,EAAQF,EAAG,GAChC,GAAID,EACA,OAAOA,EAEX,IAAII,EAAUD,EAAME,KAAKN,GACzB,QAASK,GAAW,CAACF,EAASE,EAClC,GAAG,EACX,CAKO,SAASV,EAAeK,GAC3B,IAAIO,EAAcR,EAAeC,GACjC,IAAKO,EACD,OAAO,KAEX,IAAInY,EAAOmY,EAAY,GAAIC,EAAQD,EAAY,GAC/C,GAAa,cAATnY,EACA,OAAO,IAAI+W,EAGf,IAAIsB,EAAeD,EAAM,IAAMA,EAAM,GAAG5f,MAAM,KAAKqH,KAAK,KAAKrH,MAAM,KAAKwI,MAAM,EAAG,GAC7EqX,EACIA,EAAalgB,OAAS+e,IACtBmB,EAAejC,EAAcA,EAAc,GAAIiC,GAAc,GA4BzE,SAA4BC,GAExB,IADA,IAAI3Q,EAAS,GACJ4Q,EAAK,EAAGA,EAAKD,EAAOC,IACzB5Q,EAAO1N,KAAK,KAEhB,OAAO0N,CACX,CAlCgF6Q,CAAmBtB,EAAyBmB,EAAalgB,SAAS,IAI1IkgB,EAAe,GAEnB,IAAI9Z,EAAU8Z,EAAaxY,KAAK,KAC5B4W,EAOD,SAAkBmB,GACrB,IAAK,IAAIW,EAAK,EAAGD,EAAQlB,EAAqBjf,OAAQogB,EAAKD,EAAOC,IAAM,CACpE,IAAIT,EAAKV,EAAqBmB,GAAK9B,EAAKqB,EAAG,GAE3C,GAFuDA,EAAG,GACxCI,KAAKN,GAEnB,OAAOnB,CAEf,CACA,OAAO,IACX,CAhBagC,CAASb,GACdc,EAAiBzB,EAAmBiB,KAAKN,GAC7C,OAAIc,GAAkBA,EAAe,GAC1B,IAAI7B,EAAoB7W,EAAMzB,EAASkY,EAAIiC,EAAe,IAE9D,IAAIlC,EAAYxW,EAAMzB,EAASkY,EAC1C,C,g1uCCzLO,MAAMkC,EACW,kBAAftR,YAA2B,WAAYA,WAAaA,WAAWsR,YAASvgB,E,eCoB3E,SAAUuD,EAAIkM,GAClB,OAAO,IAAIjP,YAAYiP,EAAIoB,OAAQpB,EAAIqB,WAAYhM,KAAK0b,MAAM/Q,EAAIsB,WAAa,GACjF,CAGM,SAAU0P,EAAWhR,GACzB,OAAO,IAAIiR,SAASjR,EAAIoB,OAAQpB,EAAIqB,WAAYrB,EAAIsB,WACtD,CAGM,SAAU4P,EAAKC,EAAcxc,GACjC,OAAQwc,GAAS,GAAKxc,EAAWwc,IAASxc,CAC5C,CAOO,MAAMX,EAAgC,KACiB,KAA5D,IAAIJ,WAAW,IAAI7C,YAAY,CAAC,YAAaqQ,QAAQ,GADV,GAGvC,SAAUgQ,EAASD,GACvB,OACIA,GAAQ,GAAM,WACdA,GAAQ,EAAK,SACbA,IAAS,EAAK,MACdA,IAAS,GAAM,GAErB,CAOM,SAAUld,EAAW+L,GACzB,IAAK,IAAI/O,EAAI,EAAGA,EAAI+O,EAAI1P,OAAQW,IAC9B+O,EAAI/O,GAAKmgB,EAASpR,EAAI/O,GAE1B,CA+FM,SAAUkE,EAAQH,GAGtB,MAFoB,kBAATA,IAAmBA,EAb1B,SAAsBuL,GAC1B,GAAmB,kBAARA,EAAkB,MAAM,IAAI7M,MAAM,2CAA6C6M,GAC1F,OAAO,IAAI3M,YAAW,IAAIiI,aAAcR,OAAOkF,GACjD,CAUuC8Q,CAAYrc,KACjDU,EAAAA,EAAAA,IAAOV,GACAA,CACT,CAKM,SAAUsc,IACd,IAAIC,EAAM,EACV,IAAK,IAAItgB,EAAI,EAAGA,EAAIZ,UAAOC,OAAQW,IAAK,CACtC,MAAMsL,EAAWtL,EAAC,GAAAZ,UAAAC,QAADW,OAACV,EAAAF,UAADY,IACjByE,EAAAA,EAAAA,IAAO6G,GACPgV,GAAOhV,EAAEjM,MACX,CACA,MAAMkhB,EAAM,IAAI5d,WAAW2d,GAC3B,IAAK,IAAItgB,EAAI,EAAGoI,EAAM,EAAGpI,EAAIZ,UAAOC,OAAQW,IAAK,CAC/C,MAAMsL,EAAWtL,EAAC,GAAAZ,UAAAC,QAADW,OAACV,EAAAF,UAADY,GACjBugB,EAAI5b,IAAI2G,EAAGlD,GACXA,GAAOkD,EAAEjM,MACX,CACA,OAAOkhB,CACT,CAGM,MAAgB5e,EAsBpB6e,KAAAA,GACE,OAAOhe,KAAK4C,YACd,EAiCI,SAAUG,EACdkb,GAOA,MAAMC,EAASC,GAA2BF,IAAW3c,OAAOI,EAAQyc,IAAMxb,SACpEyb,EAAMH,IAIZ,OAHAC,EAAM3e,UAAY6e,EAAI7e,UACtB2e,EAAM7e,SAAW+e,EAAI/e,SACrB6e,EAAM3P,OAAS,IAAM0P,IACdC,CACT,CAmCM,SAAUG,IAA4B,IAAhBC,EAAW1hB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACxC,GAAIygB,GAA4C,oBAA3BA,EAAOkB,gBAC1B,OAAOlB,EAAOkB,gBAAgB,IAAIpe,WAAWme,IAG/C,GAAIjB,GAAwC,oBAAvBA,EAAOgB,YAC1B,OAAOhB,EAAOgB,YAAYC,GAE5B,MAAM,IAAIre,MAAM,yCAClB,C","sources":["../node_modules/@wagmi/connectors/node_modules/@noble/hashes/src/_u64.ts","../node_modules/@wagmi/connectors/node_modules/@noble/hashes/src/sha3.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/errors/version.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/errors/base.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/utils/data/isHex.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/errors/data.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/utils/data/pad.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/errors/encoding.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/utils/data/size.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/utils/encoding/fromHex.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/utils/encoding/toHex.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/utils/encoding/toBytes.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/utils/hash/keccak256.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/utils/lru.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/utils/address/getAddress.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/utils/signature/recoverPublicKey.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/utils/signature/recoverAddress.ts","../node_modules/@wagmi/connectors/node_modules/@walletconnect/utils/node_modules/viem/accounts/utils/publicKeyToAddress.ts","../node_modules/@wagmi/connectors/node_modules/uint8arrays/esm/src/alloc.js","../node_modules/@wagmi/connectors/node_modules/uint8arrays/esm/src/concat.js","../node_modules/@wagmi/connectors/node_modules/uint8arrays/esm/src/util/bases.js","../node_modules/@wagmi/connectors/node_modules/uint8arrays/esm/src/from-string.js","../node_modules/@wagmi/connectors/node_modules/uint8arrays/esm/src/to-string.js","../node_modules/@wagmi/connectors/node_modules/@noble/hashes/src/_assert.ts","../node_modules/idb-keyval/dist/index.js","../node_modules/destr/dist/index.mjs","../node_modules/@wagmi/connectors/node_modules/unstorage/dist/shared/unstorage.zVDD2mZo.mjs","../node_modules/@wagmi/connectors/node_modules/unstorage/dist/index.mjs","../node_modules/base-x/src/esm/index.js","../node_modules/bs58/src/esm/index.js","../node_modules/ws/browser.js","../../../src/events.ts","../node_modules/detect-browser/es/index.js","../node_modules/@wagmi/connectors/node_modules/@noble/hashes/src/crypto.ts","../node_modules/@wagmi/connectors/node_modules/@noble/hashes/src/utils.ts"],"sourcesContent":["/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\nfunction fromBig(\n  n: bigint,\n  le = false\n): {\n  h: number;\n  l: number;\n} {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false): Uint32Array[] {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number): bigint => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number): number => h >>> s;\nconst shrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number): number => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number): number => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number): number => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number): number => l;\nconst rotr32L = (h: number, _l: number): number => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number): number => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number): number => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number): number => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number): number => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(\n  Ah: number,\n  Al: number,\n  Bh: number,\n  Bl: number\n): {\n  h: number;\n  l: number;\n} {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number): number => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number): number =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number): number =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number): number =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64: { fromBig: typeof fromBig; split: typeof split; toBig: (h: number, l: number) => bigint; shrSH: (h: number, _l: number, s: number) => number; shrSL: (h: number, l: number, s: number) => number; rotrSH: (h: number, l: number, s: number) => number; rotrSL: (h: number, l: number, s: number) => number; rotrBH: (h: number, l: number, s: number) => number; rotrBL: (h: number, l: number, s: number) => number; rotr32H: (_h: number, l: number) => number; rotr32L: (h: number, _l: number) => number; rotlSH: (h: number, l: number, s: number) => number; rotlSL: (h: number, l: number, s: number) => number; rotlBH: (h: number, l: number, s: number) => number; rotlBL: (h: number, l: number, s: number) => number; add: typeof add; add3L: (Al: number, Bl: number, Cl: number) => number; add3H: (low: number, Ah: number, Bh: number, Ch: number) => number; add4L: (Al: number, Bl: number, Cl: number, Dl: number) => number; add4H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number) => number; add5H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) => number; add5L: (Al: number, Bl: number, Cl: number, Dl: number, El: number) => number; } = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { abytes, aexists, anumber, aoutput } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  byteSwap32,\n  Hash,\n  isLE,\n  toBytes,\n  u32,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  type CHash,\n  type CHashXO,\n  type HashXOF,\n  type Input,\n} from './utils.js';\n\n// Various per round constants calculations\nconst SHA3_PI: number[] = [];\nconst SHA3_ROTL: number[] = [];\nconst _SHA3_IOTA: bigint[] = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s: Uint32Array, rounds: number = 24): void {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\n/** Keccak sponge function. */\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    anumber(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    // 0 < blockLen < 200\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak(): void {\n    if (!isLE) byteSwap32(this.state32);\n    keccakP(this.state32, this.rounds);\n    if (!isLE) byteSwap32(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input): this {\n    aexists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish(): void {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    aexists(this, false);\n    abytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    anumber(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array): Uint8Array {\n    aoutput(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest(): Uint8Array {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy(): void {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\n/** SHA3-224 hash function. */\nexport const sha3_224: CHash = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256: CHash = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\n/** SHA3-384 hash function. */\nexport const sha3_384: CHash = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\n/** SHA3-512 hash function. */\nexport const sha3_512: CHash = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\n\n/** keccak-224 hash function. */\nexport const keccak_224: CHash = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256: CHash = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\n/** keccak-384 hash function. */\nexport const keccak_384: CHash = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\n/** keccak-512 hash function. */\nexport const keccak_512: CHash = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128: CHashXO = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256: CHashXO = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","export const version = '2.23.2'\n","import { version } from './version.js'\n\ntype ErrorConfig = {\n  getDocsUrl?: ((args: BaseErrorParameters) => string | undefined) | undefined\n  version?: string | undefined\n}\n\nlet errorConfig: ErrorConfig = {\n  getDocsUrl: ({\n    docsBaseUrl,\n    docsPath = '',\n    docsSlug,\n  }: BaseErrorParameters) =>\n    docsPath\n      ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${\n          docsSlug ? `#${docsSlug}` : ''\n        }`\n      : undefined,\n  version: `viem@${version}`,\n}\n\nexport function setErrorConfig(config: ErrorConfig) {\n  errorConfig = config\n}\n\ntype BaseErrorParameters = {\n  cause?: BaseError | Error | undefined\n  details?: string | undefined\n  docsBaseUrl?: string | undefined\n  docsPath?: string | undefined\n  docsSlug?: string | undefined\n  metaMessages?: string[] | undefined\n  name?: string | undefined\n}\n\nexport type BaseErrorType = BaseError & { name: 'BaseError' }\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n  version: string\n\n  override name = 'BaseError'\n\n  constructor(shortMessage: string, args: BaseErrorParameters = {}) {\n    const details = (() => {\n      if (args.cause instanceof BaseError) return args.cause.details\n      if (args.cause?.message) return args.cause.message\n      return args.details!\n    })()\n    const docsPath = (() => {\n      if (args.cause instanceof BaseError)\n        return args.cause.docsPath || args.docsPath\n      return args.docsPath\n    })()\n    const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath })\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsUrl ? [`Docs: ${docsUrl}`] : []),\n      ...(details ? [`Details: ${details}`] : []),\n      ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),\n    ].join('\\n')\n\n    super(message, args.cause ? { cause: args.cause } : undefined)\n\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.name = args.name ?? this.name\n    this.shortMessage = shortMessage\n    this.version = version\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (\n    err &&\n    typeof err === 'object' &&\n    'cause' in err &&\n    err.cause !== undefined\n  )\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type IsHexErrorType = ErrorType\n\nexport function isHex(\n  value: unknown,\n  { strict = true }: { strict?: boolean | undefined } = {},\n): value is Hex {\n  if (!value) return false\n  if (typeof value !== 'string') return false\n  return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x')\n}\n","import { BaseError } from './base.js'\n\nexport type SliceOffsetOutOfBoundsErrorType = SliceOffsetOutOfBoundsError & {\n  name: 'SliceOffsetOutOfBoundsError'\n}\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \"${offset}\" is out-of-bounds (size: ${size}).`,\n      { name: 'SliceOffsetOutOfBoundsError' },\n    )\n  }\n}\n\nexport type SizeExceedsPaddingSizeErrorType = SizeExceedsPaddingSizeError & {\n  name: 'SizeExceedsPaddingSizeError'\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`,\n      { name: 'SizeExceedsPaddingSizeError' },\n    )\n  }\n}\n\nexport type InvalidBytesLengthErrorType = InvalidBytesLengthError & {\n  name: 'InvalidBytesLengthError'\n}\nexport class InvalidBytesLengthError extends BaseError {\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`,\n      { name: 'InvalidBytesLengthError' },\n    )\n  }\n}\n","import {\n  SizeExceedsPaddingSizeError,\n  type SizeExceedsPaddingSizeErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype PadOptions = {\n  dir?: 'left' | 'right' | undefined\n  size?: number | null | undefined\n}\nexport type PadReturnType<value extends ByteArray | Hex> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type PadErrorType = PadHexErrorType | PadBytesErrorType | ErrorType\n\nexport function pad<value extends ByteArray | Hex>(\n  hexOrBytes: value,\n  { dir, size = 32 }: PadOptions = {},\n): PadReturnType<value> {\n  if (typeof hexOrBytes === 'string')\n    return padHex(hexOrBytes, { dir, size }) as PadReturnType<value>\n  return padBytes(hexOrBytes, { dir, size }) as PadReturnType<value>\n}\n\nexport type PadHexErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padHex(hex_: Hex, { dir, size = 32 }: PadOptions = {}) {\n  if (size === null) return hex_\n  const hex = hex_.replace('0x', '')\n  if (hex.length > size * 2)\n    throw new SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'hex',\n    })\n\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](\n    size * 2,\n    '0',\n  )}` as Hex\n}\n\nexport type PadBytesErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padBytes(\n  bytes: ByteArray,\n  { dir, size = 32 }: PadOptions = {},\n) {\n  if (size === null) return bytes\n  if (bytes.length > size)\n    throw new SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'bytes',\n    })\n  const paddedBytes = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right'\n    paddedBytes[padEnd ? i : size - i - 1] =\n      bytes[padEnd ? i : bytes.length - i - 1]\n  }\n  return paddedBytes\n}\n","import type { ByteArray, Hex } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type IntegerOutOfRangeErrorType = IntegerOutOfRangeError & {\n  name: 'IntegerOutOfRangeError'\n}\nexport class IntegerOutOfRangeError extends BaseError {\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string | undefined\n    min: string\n    signed?: boolean | undefined\n    size?: number | undefined\n    value: string\n  }) {\n    super(\n      `Number \"${value}\" is not in safe ${\n        size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''\n      }integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`,\n      { name: 'IntegerOutOfRangeError' },\n    )\n  }\n}\n\nexport type InvalidBytesBooleanErrorType = InvalidBytesBooleanError & {\n  name: 'InvalidBytesBooleanError'\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  constructor(bytes: ByteArray) {\n    super(\n      `Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,\n      {\n        name: 'InvalidBytesBooleanError',\n      },\n    )\n  }\n}\n\nexport type InvalidHexBooleanErrorType = InvalidHexBooleanError & {\n  name: 'InvalidHexBooleanError'\n}\nexport class InvalidHexBooleanError extends BaseError {\n  constructor(hex: Hex) {\n    super(\n      `Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`,\n      { name: 'InvalidHexBooleanError' },\n    )\n  }\n}\n\nexport type InvalidHexValueErrorType = InvalidHexValueError & {\n  name: 'InvalidHexValueError'\n}\nexport class InvalidHexValueError extends BaseError {\n  constructor(value: Hex) {\n    super(\n      `Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`,\n      { name: 'InvalidHexValueError' },\n    )\n  }\n}\n\nexport type SizeOverflowErrorType = SizeOverflowError & {\n  name: 'SizeOverflowError'\n}\nexport class SizeOverflowError extends BaseError {\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`,\n      { name: 'SizeOverflowError' },\n    )\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\n\nexport type SizeErrorType = IsHexErrorType | ErrorType\n\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value: Hex | ByteArray) {\n  if (isHex(value, { strict: false })) return Math.ceil((value.length - 2) / 2)\n  return value.length\n}\n","import {\n  InvalidHexBooleanError,\n  type InvalidHexBooleanErrorType,\n  SizeOverflowError,\n  type SizeOverflowErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type SizeErrorType, size as size_ } from '../data/size.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\n\nexport type AssertSizeErrorType =\n  | SizeOverflowErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function assertSize(\n  hexOrBytes: Hex | ByteArray,\n  { size }: { size: number },\n): void {\n  if (size_(hexOrBytes) > size)\n    throw new SizeOverflowError({\n      givenSize: size_(hexOrBytes),\n      maxSize: size,\n    })\n}\n\nexport type FromHexParameters<\n  to extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n> =\n  | to\n  | {\n      /** Size (in bytes) of the hex value. */\n      size?: number | undefined\n      /** Type to convert to. */\n      to: to\n    }\n\nexport type FromHexReturnType<to> = to extends 'string'\n  ? string\n  : to extends 'bigint'\n    ? bigint\n    : to extends 'number'\n      ? number\n      : to extends 'bytes'\n        ? ByteArray\n        : to extends 'boolean'\n          ? boolean\n          : never\n\nexport type FromHexErrorType =\n  | HexToNumberErrorType\n  | HexToBigIntErrorType\n  | HexToBoolErrorType\n  | HexToStringErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex\n * - Example: https://viem.sh/docs/utilities/fromHex#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex<\n  to extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n>(hex: Hex, toOrOpts: FromHexParameters<to>): FromHexReturnType<to> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number') return hexToNumber(hex, opts) as FromHexReturnType<to>\n  if (to === 'bigint') return hexToBigInt(hex, opts) as FromHexReturnType<to>\n  if (to === 'string') return hexToString(hex, opts) as FromHexReturnType<to>\n  if (to === 'boolean') return hexToBool(hex, opts) as FromHexReturnType<to>\n  return hexToBytes(hex, opts) as FromHexReturnType<to>\n}\n\nexport type HexToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean | undefined\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToBigIntErrorType = AssertSizeErrorType | ErrorType\n\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex: Hex, opts: HexToBigIntOpts = {}): bigint {\n  const { signed } = opts\n\n  if (opts.size) assertSize(hex, { size: opts.size })\n\n  const value = BigInt(hex)\n  if (!signed) return value\n\n  const size = (hex.length - 2) / 2\n  const max = (1n << (BigInt(size) * 8n - 1n)) - 1n\n  if (value <= max) return value\n\n  return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n\n}\n\nexport type HexToBoolOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToBoolErrorType =\n  | AssertSizeErrorType\n  | InvalidHexBooleanErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_: Hex, opts: HexToBoolOpts = {}): boolean {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = trim(hex)\n  }\n  if (trim(hex) === '0x00') return false\n  if (trim(hex) === '0x01') return true\n  throw new InvalidHexBooleanError(hex)\n}\n\nexport type HexToNumberOpts = HexToBigIntOpts\n\nexport type HexToNumberErrorType = HexToBigIntErrorType | ErrorType\n\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex: Hex, opts: HexToNumberOpts = {}): number {\n  return Number(hexToBigInt(hex, opts))\n}\n\nexport type HexToStringOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToStringErrorType =\n  | AssertSizeErrorType\n  | HexToBytesErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex: Hex, opts: HexToStringOpts = {}): string {\n  let bytes = hexToBytes(hex)\n  if (opts.size) {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n","import {\n  IntegerOutOfRangeError,\n  type IntegerOutOfRangeErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\n\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) =>\n  i.toString(16).padStart(2, '0'),\n)\n\nexport type ToHexParameters = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type ToHexErrorType =\n  | BoolToHexErrorType\n  | BytesToHexErrorType\n  | NumberToHexErrorType\n  | StringToHexErrorType\n  | ErrorType\n\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(\n  value: string | number | bigint | boolean | ByteArray,\n  opts: ToHexParameters = {},\n): Hex {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToHex(value, opts)\n  if (typeof value === 'string') {\n    return stringToHex(value, opts)\n  }\n  if (typeof value === 'boolean') return boolToHex(value, opts)\n  return bytesToHex(value, opts)\n}\n\nexport type BoolToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type BoolToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value: boolean, opts: BoolToHexOpts = {}): Hex {\n  const hex: Hex = `0x${Number(value)}`\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { size: opts.size })\n  }\n  return hex\n}\n\nexport type BytesToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type BytesToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value: ByteArray, opts: BytesToHexOpts = {}): Hex {\n  let string = ''\n  for (let i = 0; i < value.length; i++) {\n    string += hexes[value[i]]\n  }\n  const hex = `0x${string}` as const\n\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { dir: 'right', size: opts.size })\n  }\n  return hex\n}\n\nexport type NumberToHexOpts =\n  | {\n      /** Whether or not the number of a signed representation. */\n      signed?: boolean | undefined\n      /** The size (in bytes) of the output hex value. */\n      size: number\n    }\n  | {\n      signed?: undefined\n      /** The size (in bytes) of the output hex value. */\n      size?: number | undefined\n    }\n\nexport type NumberToHexErrorType =\n  | IntegerOutOfRangeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(\n  value_: number | bigint,\n  opts: NumberToHexOpts = {},\n): Hex {\n  const { signed, size } = opts\n\n  const value = BigInt(value_)\n\n  let maxValue: bigint | number | undefined\n  if (size) {\n    if (signed) maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n\n    else maxValue = 2n ** (BigInt(size) * 8n) - 1n\n  } else if (typeof value_ === 'number') {\n    maxValue = BigInt(Number.MAX_SAFE_INTEGER)\n  }\n\n  const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0\n\n  if ((maxValue && value > maxValue) || value < minValue) {\n    const suffix = typeof value_ === 'bigint' ? 'n' : ''\n    throw new IntegerOutOfRangeError({\n      max: maxValue ? `${maxValue}${suffix}` : undefined,\n      min: `${minValue}${suffix}`,\n      signed,\n      size,\n      value: `${value_}${suffix}`,\n    })\n  }\n\n  const hex = `0x${(\n    signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value\n  ).toString(16)}` as Hex\n  if (size) return pad(hex, { size }) as Hex\n  return hex\n}\n\nexport type StringToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type StringToHexErrorType = BytesToHexErrorType | ErrorType\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_: string, opts: StringToHexOpts = {}): Hex {\n  const value = encoder.encode(value_)\n  return bytesToHex(value, opts)\n}\n","import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  type NumberToHexOpts,\n  numberToHex,\n} from './toHex.js'\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\nexport type ToBytesParameters = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type ToBytesErrorType =\n  | NumberToBytesErrorType\n  | BoolToBytesErrorType\n  | HexToBytesErrorType\n  | StringToBytesErrorType\n  | IsHexErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(\n  value: string | bigint | number | boolean | Hex,\n  opts: ToBytesParameters = {},\n): ByteArray {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToBytes(value, opts)\n  if (typeof value === 'boolean') return boolToBytes(value, opts)\n  if (isHex(value)) return hexToBytes(value, opts)\n  return stringToBytes(value, opts)\n}\n\nexport type BoolToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type BoolToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value: boolean, opts: BoolToBytesOpts = {}) {\n  const bytes = new Uint8Array(1)\n  bytes[0] = Number(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { size: opts.size })\n  }\n  return bytes\n}\n\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n  zero: 48,\n  nine: 57,\n  A: 65,\n  F: 70,\n  a: 97,\n  f: 102,\n} as const\n\nfunction charCodeToBase16(char: number) {\n  if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n    return char - charCodeMap.zero\n  if (char >= charCodeMap.A && char <= charCodeMap.F)\n    return char - (charCodeMap.A - 10)\n  if (char >= charCodeMap.a && char <= charCodeMap.f)\n    return char - (charCodeMap.a - 10)\n  return undefined\n}\n\nexport type HexToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type HexToBytesErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_: Hex, opts: HexToBytesOpts = {}): ByteArray {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = pad(hex, { dir: 'right', size: opts.size })\n  }\n\n  let hexString = hex.slice(2) as string\n  if (hexString.length % 2) hexString = `0${hexString}`\n\n  const length = hexString.length / 2\n  const bytes = new Uint8Array(length)\n  for (let index = 0, j = 0; index < length; index++) {\n    const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++))\n    const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++))\n    if (nibbleLeft === undefined || nibbleRight === undefined) {\n      throw new BaseError(\n        `Invalid byte sequence (\"${hexString[j - 2]}${\n          hexString[j - 1]\n        }\" in \"${hexString}\").`,\n      )\n    }\n    bytes[index] = nibbleLeft * 16 + nibbleRight\n  }\n  return bytes\n}\n\nexport type NumberToBytesErrorType =\n  | NumberToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(\n  value: bigint | number,\n  opts?: NumberToHexOpts | undefined,\n) {\n  const hex = numberToHex(value, opts)\n  return hexToBytes(hex)\n}\n\nexport type StringToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type StringToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(\n  value: string,\n  opts: StringToBytesOpts = {},\n): ByteArray {\n  const bytes = encoder.encode(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { dir: 'right', size: opts.size })\n  }\n  return bytes\n}\n","import { keccak_256 } from '@noble/hashes/sha3'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Keccak256Hash<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type Keccak256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function keccak256<to extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: to | undefined,\n): Keccak256Hash<to> {\n  const to = to_ || 'hex'\n  const bytes = keccak_256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Keccak256Hash<to>\n  return toHex(bytes) as Keccak256Hash<to>\n}\n","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap<value = unknown> extends Map<string, value> {\n  maxSize: number\n\n  constructor(size: number) {\n    super()\n    this.maxSize = size\n  }\n\n  override get(key: string) {\n    const value = super.get(key)\n\n    if (super.has(key) && value !== undefined) {\n      this.delete(key)\n      super.set(key, value)\n    }\n\n    return value\n  }\n\n  override set(key: string, value: value) {\n    super.set(key, value)\n    if (this.maxSize && this.size > this.maxSize) {\n      const firstKey = this.keys().next().value\n      if (firstKey) this.delete(firstKey)\n    }\n    return this\n  }\n}\n","import type { Address } from 'abitype'\n\nimport { InvalidAddressError } from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { LruMap } from '../lru.js'\nimport { type IsAddressErrorType, isAddress } from './isAddress.js'\n\nconst checksumAddressCache = /*#__PURE__*/ new LruMap<Address>(8192)\n\nexport type ChecksumAddressErrorType =\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\nexport function checksumAddress(\n  address_: Address,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number | undefined,\n): Address {\n  if (checksumAddressCache.has(`${address_}.${chainId}`))\n    return checksumAddressCache.get(`${address_}.${chainId}`)!\n\n  const hexAddress = chainId\n    ? `${chainId}${address_.toLowerCase()}`\n    : address_.substring(2).toLowerCase()\n  const hash = keccak256(stringToBytes(hexAddress), 'bytes')\n\n  const address = (\n    chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress\n  ).split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase()\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase()\n    }\n  }\n\n  const result = `0x${address.join('')}` as const\n  checksumAddressCache.set(`${address_}.${chainId}`, result)\n  return result\n}\n\nexport type GetAddressErrorType =\n  | ChecksumAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nexport function getAddress(\n  address: string,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number,\n): Address {\n  if (!isAddress(address, { strict: false }))\n    throw new InvalidAddressError({ address })\n  return checksumAddress(address, chainId)\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport {\n  type HexToNumberErrorType,\n  hexToBigInt,\n  hexToNumber,\n} from '../encoding/fromHex.js'\nimport { toHex } from '../encoding/toHex.js'\n\nexport type RecoverPublicKeyParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverPublicKeyReturnType = Hex\n\nexport type RecoverPublicKeyErrorType =\n  | HexToNumberErrorType\n  | IsHexErrorType\n  | ErrorType\n\nexport async function recoverPublicKey({\n  hash,\n  signature,\n}: RecoverPublicKeyParameters): Promise<RecoverPublicKeyReturnType> {\n  const hashHex = isHex(hash) ? hash : toHex(hash)\n\n  const { secp256k1 } = await import('@noble/curves/secp256k1')\n  const signature_ = (() => {\n    // typeof signature: `Signature`\n    if (typeof signature === 'object' && 'r' in signature && 's' in signature) {\n      const { r, s, v, yParity } = signature\n      const yParityOrV = Number(yParity ?? v)!\n      const recoveryBit = toRecoveryBit(yParityOrV)\n      return new secp256k1.Signature(\n        hexToBigInt(r),\n        hexToBigInt(s),\n      ).addRecoveryBit(recoveryBit)\n    }\n\n    // typeof signature: `Hex | ByteArray`\n    const signatureHex = isHex(signature) ? signature : toHex(signature)\n    const yParityOrV = hexToNumber(`0x${signatureHex.slice(130)}`)\n    const recoveryBit = toRecoveryBit(yParityOrV)\n    return secp256k1.Signature.fromCompact(\n      signatureHex.substring(2, 130),\n    ).addRecoveryBit(recoveryBit)\n  })()\n\n  const publicKey = signature_\n    .recoverPublicKey(hashHex.substring(2))\n    .toHex(false)\n  return `0x${publicKey}`\n}\n\nfunction toRecoveryBit(yParityOrV: number) {\n  if (yParityOrV === 0 || yParityOrV === 1) return yParityOrV\n  if (yParityOrV === 27) return 0\n  if (yParityOrV === 28) return 1\n  throw new Error('Invalid yParityOrV value')\n}\n","import type { Address } from 'abitype'\n\nimport { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { recoverPublicKey } from './recoverPublicKey.js'\n\nexport type RecoverAddressParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverAddressReturnType = Address\n\nexport type RecoverAddressErrorType = ErrorType\n\nexport async function recoverAddress({\n  hash,\n  signature,\n}: RecoverAddressParameters): Promise<RecoverAddressReturnType> {\n  return publicKeyToAddress(await recoverPublicKey({ hash: hash, signature }))\n}\n","import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport {\n  type Keccak256ErrorType,\n  keccak256,\n} from '../../utils/hash/keccak256.js'\n\nexport type PublicKeyToAddressErrorType =\n  | ChecksumAddressErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey: Hex): Address {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\n  return checksumAddress(`0x${address}`) as Address\n}\n","export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}","import { allocUnsafe } from './alloc.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}","/**\n * Internal assertion helpers.\n * @module\n */\n\n/** Asserts something is positive integer. */\nfunction anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is Uint8Array. */\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Hash interface. */\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** Asserts something is hash */\nfunction ahash(h: Hash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\nexport { anumber, abytes, ahash, aexists, aoutput };\n","function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n","const suspectProtoRx = /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/;\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/;\nconst JsonSigRx = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\nfunction jsonParseTransform(key, value) {\n  if (key === \"__proto__\" || key === \"constructor\" && value && typeof value === \"object\" && \"prototype\" in value) {\n    warnKeyDropped(key);\n    return;\n  }\n  return value;\n}\nfunction warnKeyDropped(key) {\n  console.warn(`[destr] Dropping \"${key}\" key to prevent prototype pollution.`);\n}\nfunction destr(value, options = {}) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  if (value[0] === '\"' && value[value.length - 1] === '\"' && value.indexOf(\"\\\\\") === -1) {\n    return value.slice(1, -1);\n  }\n  const _value = value.trim();\n  if (_value.length <= 9) {\n    switch (_value.toLowerCase()) {\n      case \"true\": {\n        return true;\n      }\n      case \"false\": {\n        return false;\n      }\n      case \"undefined\": {\n        return void 0;\n      }\n      case \"null\": {\n        return null;\n      }\n      case \"nan\": {\n        return Number.NaN;\n      }\n      case \"infinity\": {\n        return Number.POSITIVE_INFINITY;\n      }\n      case \"-infinity\": {\n        return Number.NEGATIVE_INFINITY;\n      }\n    }\n  }\n  if (!JsonSigRx.test(value)) {\n    if (options.strict) {\n      throw new SyntaxError(\"[destr] Invalid JSON\");\n    }\n    return value;\n  }\n  try {\n    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {\n      if (options.strict) {\n        throw new Error(\"[destr] Possible prototype pollution\");\n      }\n      return JSON.parse(value, jsonParseTransform);\n    }\n    return JSON.parse(value);\n  } catch (error) {\n    if (options.strict) {\n      throw error;\n    }\n    return value;\n  }\n}\nfunction safeDestr(value, options = {}) {\n  return destr(value, { ...options, strict: true });\n}\n\nexport { destr as default, destr, safeDestr };\n","function wrapToPromise(value) {\n  if (!value || typeof value.then !== \"function\") {\n    return Promise.resolve(value);\n  }\n  return value;\n}\nfunction asyncCall(function_, ...arguments_) {\n  try {\n    return wrapToPromise(function_(...arguments_));\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\nfunction isPrimitive(value) {\n  const type = typeof value;\n  return value === null || type !== \"object\" && type !== \"function\";\n}\nfunction isPureObject(value) {\n  const proto = Object.getPrototypeOf(value);\n  return !proto || proto.isPrototypeOf(Object);\n}\nfunction stringify(value) {\n  if (isPrimitive(value)) {\n    return String(value);\n  }\n  if (isPureObject(value) || Array.isArray(value)) {\n    return JSON.stringify(value);\n  }\n  if (typeof value.toJSON === \"function\") {\n    return stringify(value.toJSON());\n  }\n  throw new Error(\"[unstorage] Cannot stringify value!\");\n}\nconst BASE64_PREFIX = \"base64:\";\nfunction serializeRaw(value) {\n  if (typeof value === \"string\") {\n    return value;\n  }\n  return BASE64_PREFIX + base64Encode(value);\n}\nfunction deserializeRaw(value) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  if (!value.startsWith(BASE64_PREFIX)) {\n    return value;\n  }\n  return base64Decode(value.slice(BASE64_PREFIX.length));\n}\nfunction base64Decode(input) {\n  if (globalThis.Buffer) {\n    return Buffer.from(input, \"base64\");\n  }\n  return Uint8Array.from(\n    globalThis.atob(input),\n    (c) => c.codePointAt(0)\n  );\n}\nfunction base64Encode(input) {\n  if (globalThis.Buffer) {\n    return Buffer.from(input).toString(\"base64\");\n  }\n  return globalThis.btoa(String.fromCodePoint(...input));\n}\n\nconst storageKeyProperties = [\n  \"has\",\n  \"hasItem\",\n  \"get\",\n  \"getItem\",\n  \"getItemRaw\",\n  \"set\",\n  \"setItem\",\n  \"setItemRaw\",\n  \"del\",\n  \"remove\",\n  \"removeItem\",\n  \"getMeta\",\n  \"setMeta\",\n  \"removeMeta\",\n  \"getKeys\",\n  \"clear\",\n  \"mount\",\n  \"unmount\"\n];\nfunction prefixStorage(storage, base) {\n  base = normalizeBaseKey(base);\n  if (!base) {\n    return storage;\n  }\n  const nsStorage = { ...storage };\n  for (const property of storageKeyProperties) {\n    nsStorage[property] = (key = \"\", ...args) => (\n      // @ts-ignore\n      storage[property](base + key, ...args)\n    );\n  }\n  nsStorage.getKeys = (key = \"\", ...arguments_) => storage.getKeys(base + key, ...arguments_).then((keys) => keys.map((key2) => key2.slice(base.length)));\n  nsStorage.keys = nsStorage.getKeys;\n  nsStorage.getItems = async (items, commonOptions) => {\n    const prefixedItems = items.map(\n      (item) => typeof item === \"string\" ? base + item : { ...item, key: base + item.key }\n    );\n    const results = await storage.getItems(prefixedItems, commonOptions);\n    return results.map((entry) => ({\n      key: entry.key.slice(base.length),\n      value: entry.value\n    }));\n  };\n  nsStorage.setItems = async (items, commonOptions) => {\n    const prefixedItems = items.map((item) => ({\n      key: base + item.key,\n      value: item.value,\n      options: item.options\n    }));\n    return storage.setItems(prefixedItems, commonOptions);\n  };\n  return nsStorage;\n}\nfunction normalizeKey(key) {\n  if (!key) {\n    return \"\";\n  }\n  return key.split(\"?\")[0]?.replace(/[/\\\\]/g, \":\").replace(/:+/g, \":\").replace(/^:|:$/g, \"\") || \"\";\n}\nfunction joinKeys(...keys) {\n  return normalizeKey(keys.join(\":\"));\n}\nfunction normalizeBaseKey(base) {\n  base = normalizeKey(base);\n  return base ? base + \":\" : \"\";\n}\nfunction filterKeyByDepth(key, depth) {\n  if (depth === void 0) {\n    return true;\n  }\n  let substrCount = 0;\n  let index = key.indexOf(\":\");\n  while (index > -1) {\n    substrCount++;\n    index = key.indexOf(\":\", index + 1);\n  }\n  return substrCount <= depth;\n}\nfunction filterKeyByBase(key, base) {\n  if (base) {\n    return key.startsWith(base) && key[key.length - 1] !== \"$\";\n  }\n  return key[key.length - 1] !== \"$\";\n}\n\nexport { normalizeKey as a, asyncCall as b, filterKeyByBase as c, stringify as d, deserializeRaw as e, filterKeyByDepth as f, joinKeys as j, normalizeBaseKey as n, prefixStorage as p, serializeRaw as s };\n","import destr from 'destr';\nimport { n as normalizeBaseKey, a as normalizeKey, b as asyncCall, f as filterKeyByDepth, c as filterKeyByBase, s as serializeRaw, d as stringify, e as deserializeRaw, j as joinKeys } from './shared/unstorage.zVDD2mZo.mjs';\nexport { p as prefixStorage } from './shared/unstorage.zVDD2mZo.mjs';\n\nfunction defineDriver(factory) {\n  return factory;\n}\n\nconst DRIVER_NAME = \"memory\";\nconst memory = defineDriver(() => {\n  const data = /* @__PURE__ */ new Map();\n  return {\n    name: DRIVER_NAME,\n    getInstance: () => data,\n    hasItem(key) {\n      return data.has(key);\n    },\n    getItem(key) {\n      return data.get(key) ?? null;\n    },\n    getItemRaw(key) {\n      return data.get(key) ?? null;\n    },\n    setItem(key, value) {\n      data.set(key, value);\n    },\n    setItemRaw(key, value) {\n      data.set(key, value);\n    },\n    removeItem(key) {\n      data.delete(key);\n    },\n    getKeys() {\n      return [...data.keys()];\n    },\n    clear() {\n      data.clear();\n    },\n    dispose() {\n      data.clear();\n    }\n  };\n});\n\nfunction createStorage(options = {}) {\n  const context = {\n    mounts: { \"\": options.driver || memory() },\n    mountpoints: [\"\"],\n    watching: false,\n    watchListeners: [],\n    unwatch: {}\n  };\n  const getMount = (key) => {\n    for (const base of context.mountpoints) {\n      if (key.startsWith(base)) {\n        return {\n          base,\n          relativeKey: key.slice(base.length),\n          driver: context.mounts[base]\n        };\n      }\n    }\n    return {\n      base: \"\",\n      relativeKey: key,\n      driver: context.mounts[\"\"]\n    };\n  };\n  const getMounts = (base, includeParent) => {\n    return context.mountpoints.filter(\n      (mountpoint) => mountpoint.startsWith(base) || includeParent && base.startsWith(mountpoint)\n    ).map((mountpoint) => ({\n      relativeBase: base.length > mountpoint.length ? base.slice(mountpoint.length) : void 0,\n      mountpoint,\n      driver: context.mounts[mountpoint]\n    }));\n  };\n  const onChange = (event, key) => {\n    if (!context.watching) {\n      return;\n    }\n    key = normalizeKey(key);\n    for (const listener of context.watchListeners) {\n      listener(event, key);\n    }\n  };\n  const startWatch = async () => {\n    if (context.watching) {\n      return;\n    }\n    context.watching = true;\n    for (const mountpoint in context.mounts) {\n      context.unwatch[mountpoint] = await watch(\n        context.mounts[mountpoint],\n        onChange,\n        mountpoint\n      );\n    }\n  };\n  const stopWatch = async () => {\n    if (!context.watching) {\n      return;\n    }\n    for (const mountpoint in context.unwatch) {\n      await context.unwatch[mountpoint]();\n    }\n    context.unwatch = {};\n    context.watching = false;\n  };\n  const runBatch = (items, commonOptions, cb) => {\n    const batches = /* @__PURE__ */ new Map();\n    const getBatch = (mount) => {\n      let batch = batches.get(mount.base);\n      if (!batch) {\n        batch = {\n          driver: mount.driver,\n          base: mount.base,\n          items: []\n        };\n        batches.set(mount.base, batch);\n      }\n      return batch;\n    };\n    for (const item of items) {\n      const isStringItem = typeof item === \"string\";\n      const key = normalizeKey(isStringItem ? item : item.key);\n      const value = isStringItem ? void 0 : item.value;\n      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };\n      const mount = getMount(key);\n      getBatch(mount).items.push({\n        key,\n        value,\n        relativeKey: mount.relativeKey,\n        options: options2\n      });\n    }\n    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(\n      (r) => r.flat()\n    );\n  };\n  const storage = {\n    // Item\n    hasItem(key, opts = {}) {\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      return asyncCall(driver.hasItem, relativeKey, opts);\n    },\n    getItem(key, opts = {}) {\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      return asyncCall(driver.getItem, relativeKey, opts).then(\n        (value) => destr(value)\n      );\n    },\n    getItems(items, commonOptions = {}) {\n      return runBatch(items, commonOptions, (batch) => {\n        if (batch.driver.getItems) {\n          return asyncCall(\n            batch.driver.getItems,\n            batch.items.map((item) => ({\n              key: item.relativeKey,\n              options: item.options\n            })),\n            commonOptions\n          ).then(\n            (r) => r.map((item) => ({\n              key: joinKeys(batch.base, item.key),\n              value: destr(item.value)\n            }))\n          );\n        }\n        return Promise.all(\n          batch.items.map((item) => {\n            return asyncCall(\n              batch.driver.getItem,\n              item.relativeKey,\n              item.options\n            ).then((value) => ({\n              key: item.key,\n              value: destr(value)\n            }));\n          })\n        );\n      });\n    },\n    getItemRaw(key, opts = {}) {\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (driver.getItemRaw) {\n        return asyncCall(driver.getItemRaw, relativeKey, opts);\n      }\n      return asyncCall(driver.getItem, relativeKey, opts).then(\n        (value) => deserializeRaw(value)\n      );\n    },\n    async setItem(key, value, opts = {}) {\n      if (value === void 0) {\n        return storage.removeItem(key);\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (!driver.setItem) {\n        return;\n      }\n      await asyncCall(driver.setItem, relativeKey, stringify(value), opts);\n      if (!driver.watch) {\n        onChange(\"update\", key);\n      }\n    },\n    async setItems(items, commonOptions) {\n      await runBatch(items, commonOptions, async (batch) => {\n        if (batch.driver.setItems) {\n          return asyncCall(\n            batch.driver.setItems,\n            batch.items.map((item) => ({\n              key: item.relativeKey,\n              value: stringify(item.value),\n              options: item.options\n            })),\n            commonOptions\n          );\n        }\n        if (!batch.driver.setItem) {\n          return;\n        }\n        await Promise.all(\n          batch.items.map((item) => {\n            return asyncCall(\n              batch.driver.setItem,\n              item.relativeKey,\n              stringify(item.value),\n              item.options\n            );\n          })\n        );\n      });\n    },\n    async setItemRaw(key, value, opts = {}) {\n      if (value === void 0) {\n        return storage.removeItem(key, opts);\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (driver.setItemRaw) {\n        await asyncCall(driver.setItemRaw, relativeKey, value, opts);\n      } else if (driver.setItem) {\n        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);\n      } else {\n        return;\n      }\n      if (!driver.watch) {\n        onChange(\"update\", key);\n      }\n    },\n    async removeItem(key, opts = {}) {\n      if (typeof opts === \"boolean\") {\n        opts = { removeMeta: opts };\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (!driver.removeItem) {\n        return;\n      }\n      await asyncCall(driver.removeItem, relativeKey, opts);\n      if (opts.removeMeta || opts.removeMata) {\n        await asyncCall(driver.removeItem, relativeKey + \"$\", opts);\n      }\n      if (!driver.watch) {\n        onChange(\"remove\", key);\n      }\n    },\n    // Meta\n    async getMeta(key, opts = {}) {\n      if (typeof opts === \"boolean\") {\n        opts = { nativeOnly: opts };\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      const meta = /* @__PURE__ */ Object.create(null);\n      if (driver.getMeta) {\n        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));\n      }\n      if (!opts.nativeOnly) {\n        const value = await asyncCall(\n          driver.getItem,\n          relativeKey + \"$\",\n          opts\n        ).then((value_) => destr(value_));\n        if (value && typeof value === \"object\") {\n          if (typeof value.atime === \"string\") {\n            value.atime = new Date(value.atime);\n          }\n          if (typeof value.mtime === \"string\") {\n            value.mtime = new Date(value.mtime);\n          }\n          Object.assign(meta, value);\n        }\n      }\n      return meta;\n    },\n    setMeta(key, value, opts = {}) {\n      return this.setItem(key + \"$\", value, opts);\n    },\n    removeMeta(key, opts = {}) {\n      return this.removeItem(key + \"$\", opts);\n    },\n    // Keys\n    async getKeys(base, opts = {}) {\n      base = normalizeBaseKey(base);\n      const mounts = getMounts(base, true);\n      let maskedMounts = [];\n      const allKeys = [];\n      let allMountsSupportMaxDepth = true;\n      for (const mount of mounts) {\n        if (!mount.driver.flags?.maxDepth) {\n          allMountsSupportMaxDepth = false;\n        }\n        const rawKeys = await asyncCall(\n          mount.driver.getKeys,\n          mount.relativeBase,\n          opts\n        );\n        for (const key of rawKeys) {\n          const fullKey = mount.mountpoint + normalizeKey(key);\n          if (!maskedMounts.some((p) => fullKey.startsWith(p))) {\n            allKeys.push(fullKey);\n          }\n        }\n        maskedMounts = [\n          mount.mountpoint,\n          ...maskedMounts.filter((p) => !p.startsWith(mount.mountpoint))\n        ];\n      }\n      const shouldFilterByDepth = opts.maxDepth !== void 0 && !allMountsSupportMaxDepth;\n      return allKeys.filter(\n        (key) => (!shouldFilterByDepth || filterKeyByDepth(key, opts.maxDepth)) && filterKeyByBase(key, base)\n      );\n    },\n    // Utils\n    async clear(base, opts = {}) {\n      base = normalizeBaseKey(base);\n      await Promise.all(\n        getMounts(base, false).map(async (m) => {\n          if (m.driver.clear) {\n            return asyncCall(m.driver.clear, m.relativeBase, opts);\n          }\n          if (m.driver.removeItem) {\n            const keys = await m.driver.getKeys(m.relativeBase || \"\", opts);\n            return Promise.all(\n              keys.map((key) => m.driver.removeItem(key, opts))\n            );\n          }\n        })\n      );\n    },\n    async dispose() {\n      await Promise.all(\n        Object.values(context.mounts).map((driver) => dispose(driver))\n      );\n    },\n    async watch(callback) {\n      await startWatch();\n      context.watchListeners.push(callback);\n      return async () => {\n        context.watchListeners = context.watchListeners.filter(\n          (listener) => listener !== callback\n        );\n        if (context.watchListeners.length === 0) {\n          await stopWatch();\n        }\n      };\n    },\n    async unwatch() {\n      context.watchListeners = [];\n      await stopWatch();\n    },\n    // Mount\n    mount(base, driver) {\n      base = normalizeBaseKey(base);\n      if (base && context.mounts[base]) {\n        throw new Error(`already mounted at ${base}`);\n      }\n      if (base) {\n        context.mountpoints.push(base);\n        context.mountpoints.sort((a, b) => b.length - a.length);\n      }\n      context.mounts[base] = driver;\n      if (context.watching) {\n        Promise.resolve(watch(driver, onChange, base)).then((unwatcher) => {\n          context.unwatch[base] = unwatcher;\n        }).catch(console.error);\n      }\n      return storage;\n    },\n    async unmount(base, _dispose = true) {\n      base = normalizeBaseKey(base);\n      if (!base || !context.mounts[base]) {\n        return;\n      }\n      if (context.watching && base in context.unwatch) {\n        context.unwatch[base]?.();\n        delete context.unwatch[base];\n      }\n      if (_dispose) {\n        await dispose(context.mounts[base]);\n      }\n      context.mountpoints = context.mountpoints.filter((key) => key !== base);\n      delete context.mounts[base];\n    },\n    getMount(key = \"\") {\n      key = normalizeKey(key) + \":\";\n      const m = getMount(key);\n      return {\n        driver: m.driver,\n        base: m.base\n      };\n    },\n    getMounts(base = \"\", opts = {}) {\n      base = normalizeKey(base);\n      const mounts = getMounts(base, opts.parents);\n      return mounts.map((m) => ({\n        driver: m.driver,\n        base: m.mountpoint\n      }));\n    },\n    // Aliases\n    keys: (base, opts = {}) => storage.getKeys(base, opts),\n    get: (key, opts = {}) => storage.getItem(key, opts),\n    set: (key, value, opts = {}) => storage.setItem(key, value, opts),\n    has: (key, opts = {}) => storage.hasItem(key, opts),\n    del: (key, opts = {}) => storage.removeItem(key, opts),\n    remove: (key, opts = {}) => storage.removeItem(key, opts)\n  };\n  return storage;\n}\nasync function snapshot(storage, base) {\n  base = normalizeBaseKey(base);\n  const keys = await storage.getKeys(base);\n  const snapshot2 = {};\n  await Promise.all(\n    keys.map(async (key) => {\n      snapshot2[key.slice(base.length)] = await storage.getItem(key);\n    })\n  );\n  return snapshot2;\n}\nasync function restoreSnapshot(driver, snapshot2, base = \"\") {\n  base = normalizeBaseKey(base);\n  await Promise.all(\n    Object.entries(snapshot2).map((e) => driver.setItem(base + e[0], e[1]))\n  );\n}\nfunction watch(driver, onChange, base) {\n  return driver.watch ? driver.watch((event, key) => onChange(event, base + key)) : () => {\n  };\n}\nasync function dispose(driver) {\n  if (typeof driver.dispose === \"function\") {\n    await asyncCall(driver.dispose);\n  }\n}\n\nconst builtinDrivers = {\n  \"azure-app-configuration\": \"unstorage/drivers/azure-app-configuration\",\n  \"azureAppConfiguration\": \"unstorage/drivers/azure-app-configuration\",\n  \"azure-cosmos\": \"unstorage/drivers/azure-cosmos\",\n  \"azureCosmos\": \"unstorage/drivers/azure-cosmos\",\n  \"azure-key-vault\": \"unstorage/drivers/azure-key-vault\",\n  \"azureKeyVault\": \"unstorage/drivers/azure-key-vault\",\n  \"azure-storage-blob\": \"unstorage/drivers/azure-storage-blob\",\n  \"azureStorageBlob\": \"unstorage/drivers/azure-storage-blob\",\n  \"azure-storage-table\": \"unstorage/drivers/azure-storage-table\",\n  \"azureStorageTable\": \"unstorage/drivers/azure-storage-table\",\n  \"capacitor-preferences\": \"unstorage/drivers/capacitor-preferences\",\n  \"capacitorPreferences\": \"unstorage/drivers/capacitor-preferences\",\n  \"cloudflare-kv-binding\": \"unstorage/drivers/cloudflare-kv-binding\",\n  \"cloudflareKVBinding\": \"unstorage/drivers/cloudflare-kv-binding\",\n  \"cloudflare-kv-http\": \"unstorage/drivers/cloudflare-kv-http\",\n  \"cloudflareKVHttp\": \"unstorage/drivers/cloudflare-kv-http\",\n  \"cloudflare-r2-binding\": \"unstorage/drivers/cloudflare-r2-binding\",\n  \"cloudflareR2Binding\": \"unstorage/drivers/cloudflare-r2-binding\",\n  \"db0\": \"unstorage/drivers/db0\",\n  \"deno-kv-node\": \"unstorage/drivers/deno-kv-node\",\n  \"denoKVNode\": \"unstorage/drivers/deno-kv-node\",\n  \"deno-kv\": \"unstorage/drivers/deno-kv\",\n  \"denoKV\": \"unstorage/drivers/deno-kv\",\n  \"fs-lite\": \"unstorage/drivers/fs-lite\",\n  \"fsLite\": \"unstorage/drivers/fs-lite\",\n  \"fs\": \"unstorage/drivers/fs\",\n  \"github\": \"unstorage/drivers/github\",\n  \"http\": \"unstorage/drivers/http\",\n  \"indexedb\": \"unstorage/drivers/indexedb\",\n  \"localstorage\": \"unstorage/drivers/localstorage\",\n  \"lru-cache\": \"unstorage/drivers/lru-cache\",\n  \"lruCache\": \"unstorage/drivers/lru-cache\",\n  \"memory\": \"unstorage/drivers/memory\",\n  \"mongodb\": \"unstorage/drivers/mongodb\",\n  \"netlify-blobs\": \"unstorage/drivers/netlify-blobs\",\n  \"netlifyBlobs\": \"unstorage/drivers/netlify-blobs\",\n  \"null\": \"unstorage/drivers/null\",\n  \"overlay\": \"unstorage/drivers/overlay\",\n  \"planetscale\": \"unstorage/drivers/planetscale\",\n  \"redis\": \"unstorage/drivers/redis\",\n  \"s3\": \"unstorage/drivers/s3\",\n  \"session-storage\": \"unstorage/drivers/session-storage\",\n  \"sessionStorage\": \"unstorage/drivers/session-storage\",\n  \"uploadthing\": \"unstorage/drivers/uploadthing\",\n  \"upstash\": \"unstorage/drivers/upstash\",\n  \"vercel-blob\": \"unstorage/drivers/vercel-blob\",\n  \"vercelBlob\": \"unstorage/drivers/vercel-blob\",\n  \"vercel-kv\": \"unstorage/drivers/vercel-kv\",\n  \"vercelKV\": \"unstorage/drivers/vercel-kv\",\n  \"vercel-runtime-cache\": \"unstorage/drivers/vercel-runtime-cache\",\n  \"vercelRuntimeCache\": \"unstorage/drivers/vercel-runtime-cache\"\n};\n\nexport { builtinDrivers, createStorage, defineDriver, filterKeyByBase, filterKeyByDepth, joinKeys, normalizeBaseKey, normalizeKey, restoreSnapshot, snapshot };\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  const BASE_MAP = new Uint8Array(256)\n  for (let j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (let i = 0; i < ALPHABET.length; i++) {\n    const x = ALPHABET.charAt(i)\n    const xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  const BASE = ALPHABET.length\n  const LEADER = ALPHABET.charAt(0)\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    // eslint-disable-next-line no-empty\n    if (source instanceof Uint8Array) { } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n    // Skip & count leading zeroes.\n    let zeroes = 0\n    let length = 0\n    let pbegin = 0\n    const pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n    // Allocate enough space in big-endian base58 representation.\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    const b58 = new Uint8Array(size)\n    // Process the bytes.\n    while (pbegin !== pend) {\n      let carry = source[pbegin]\n      // Apply \"b58 = b58 * 256 + ch\".\n      let i = 0\n      for (let it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n    // Skip leading zeroes in base58 result.\n    let it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n    // Translate the result into a string.\n    let str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    let psz = 0\n    // Skip and count leading '1's.\n    let zeroes = 0\n    let length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n    // Allocate enough space in big-endian base256 representation.\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    const b256 = new Uint8Array(size)\n    // Process the characters.\n    while (psz < source.length) {\n      // Find code of next character\n      const charCode = source.charCodeAt(psz)\n      // Base map can not be indexed using char code\n      if (charCode > 255) { return }\n      // Decode character\n      let carry = BASE_MAP[charCode]\n      // Invalid character\n      if (carry === 255) { return }\n      let i = 0\n      for (let it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n    // Skip leading zeroes in b256.\n    let it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    const vch = new Uint8Array(zeroes + (size - it4))\n    let j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    const buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode,\n    decodeUnsafe,\n    decode\n  }\n}\nexport default base\n","import basex from 'base-x';\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nexport default basex(ALPHABET);\n","'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n",null,"var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","/**\n * Internal webcrypto alias.\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n * See utils.ts for details.\n * @module\n */\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto: any =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n// Cast array to view\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): void {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('utf8ToBytes expected string, got ' + typeof str);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash function */\nexport type CHash = ReturnType<typeof wrapConstructor>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof wrapConstructorWithOpts>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof wrapXOFConstructorWithOpts>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function wrapConstructor<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return crypto.randomBytes(bytesLength);\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n"],"names":["U32_MASK64","BigInt","_32n","fromBig","n","arguments","length","undefined","h","Number","l","split","lst","le","Ah","Uint32Array","Al","i","rotlSH","s","rotlSL","rotlBH","rotlBL","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","push","t","j","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","Hash","constructor","blockLen","suffix","outputLen","enableXOF","rounds","super","pos","posOut","finished","destroyed","anumber","this","Error","state","Uint8Array","state32","u32","keccak","isLE","byteSwap32","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","fill","keccakP","update","data","aexists","len","toBytes","take","Math","min","finish","writeInto","out","abytes","bufferOut","set","subarray","xofInto","xof","bytes","digestInto","aoutput","destroy","digest","_cloneInto","to","gen","wrapConstructor","keccak_256","version","errorConfig","getDocsUrl","_ref","docsBaseUrl","docsPath","docsSlug","concat","BaseError","shortMessage","_errorConfig$getDocsU","_errorConfig","_args$name","args","details","cause","_args$cause","message","docsUrl","call","_objectSpread","metaMessages","join","Object","defineProperty","name","walk","fn","err","isHex","value","strict","test","startsWith","SizeExceedsPaddingSizeError","_ref2","size","targetSize","type","charAt","toUpperCase","slice","toLowerCase","pad","hexOrBytes","dir","hex_","hex","replace","ceil","padHex","paddedBytes","padEnd","padBytes","IntegerOutOfRangeError","max","signed","SizeOverflowError","givenSize","maxSize","assertSize","size_","hexToBigInt","opts","padStart","hexToNumber","hexes","Array","from","_v","toString","toHex","numberToHex","value_","encoder","encode","bytesToHex","stringToHex","boolToHex","string","maxValue","MAX_SAFE_INTEGER","minValue","TextEncoder","hexToBytes","numberToBytes","boolToBytes","stringToBytes","charCodeMap","zero","nine","A","F","a","f","charCodeToBase16","char","hexString","index","nibbleLeft","charCodeAt","nibbleRight","keccak256","to_","LruMap","Map","get","key","has","delete","firstKey","keys","next","checksumAddressCache","checksumAddress","address_","chainId","hexAddress","substring","hash","address","result","toRecoveryBit","yParityOrV","async","recoverAddress","signature","publicKey","publicKeyToAddress","hashHex","secp256k1","signature_","r","v","yParity","recoveryBit","Signature","addRecoveryBit","signatureHex","fromCompact","recoverPublicKey","allocUnsafe","globalThis","Buffer","arrays","reduce","acc","curr","output","offset","arr","createCodec","prefix","decode","decoder","buf","TextDecoder","str","ascii","String","fromCharCode","utf8","bases","base16","latin1","binary","fromString","encoding","base","array","buffer","byteOffset","byteLength","isSafeInteger","b","ArrayBuffer","isView","_len","lengths","_key","includes","ahash","create","instance","checkFinished","promisifyRequest","request","Promise","resolve","reject","oncomplete","onsuccess","onabort","onerror","error","createStore","dbName","storeName","indexedDB","open","onupgradeneeded","createObjectStore","dbp","txMode","callback","then","db","transaction","objectStore","defaultGetStoreFunc","defaultGetStore","store","put","del","clear","eachCursor","openCursor","continue","getAllKeys","items","cursor","suspectProtoRx","suspectConstructorRx","JsonSigRx","jsonParseTransform","console","warn","warnKeyDropped","destr","options","indexOf","_value","trim","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","SyntaxError","JSON","parse","asyncCall","function_","arguments_","stringify","isPrimitive","proto","getPrototypeOf","isPrototypeOf","isPureObject","isArray","toJSON","BASE64_PREFIX","serializeRaw","input","btoa","fromCodePoint","base64Encode","deserializeRaw","atob","c","codePointAt","base64Decode","normalizeKey","_key$split$","joinKeys","_len4","_key4","normalizeBaseKey","memory","getInstance","hasItem","getItem","_data$get","getItemRaw","_data$get2","setItem","setItemRaw","removeItem","getKeys","dispose","createStorage","context","mounts","driver","mountpoints","watching","watchListeners","unwatch","getMount","relativeKey","getMounts","includeParent","filter","mountpoint","map","relativeBase","onChange","event","listener","stopWatch","runBatch","commonOptions","cb","batches","getBatch","mount","batch","item","isStringItem","options2","all","values","flat","storage","getItems","watch","setItems","removeMeta","removeMata","getMeta","nativeOnly","meta","assign","atime","Date","mtime","setMeta","maskedMounts","allKeys","allMountsSupportMaxDepth","_mount$driver$flags","flags","maxDepth","rawKeys","fullKey","some","p","shouldFilterByDepth","depth","substrCount","filterKeyByDepth","filterKeyByBase","m","startWatch","sort","unwatcher","catch","unmount","_dispose","_context$unwatch$base","_context$unwatch","parents","remove","ALPHABET","TypeError","BASE_MAP","xc","BASE","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","charCode","carry","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","basex","module","exports","IEvents","__spreadArray","pack","ar","prototype","BrowserInfo","os","NodeInfo","process","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","document","navigator","product","matchUserAgent","ua","matched","_a","browser","regex","uaMatch","exec","matchedRule","match","versionParts","count","ii","createVersionParts","detectOS","searchBotMatch","crypto","floor","createView","DataView","rotr","word","byteSwap","utf8ToBytes","concatBytes","sum","res","clone","hashCons","hashC","msg","tmp","randomBytes","bytesLength","getRandomValues"],"sourceRoot":""}